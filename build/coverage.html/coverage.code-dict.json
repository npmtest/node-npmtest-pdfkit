{"/home/travis/build/npmtest/node-npmtest-pdfkit/test.js":"/* istanbul instrument in package npmtest_pdfkit */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pdfkit/lib.npmtest_pdfkit.js":"/* istanbul instrument in package npmtest_pdfkit */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_pdfkit = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_pdfkit = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-pdfkit/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-pdfkit && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_pdfkit */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_pdfkit\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_pdfkit.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_pdfkit.rollup.js'] =\n            local.assetsDict['/assets.npmtest_pdfkit.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_pdfkit.__dirname +\n                    '/lib.npmtest_pdfkit.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/document.js":"// Generated by CoffeeScript 1.10.0\n\n/*\nPDFDocument - represents an entire PDF document\nBy Devon Govett\n */\n\n(function() {\n  var PDFDocument, PDFObject, PDFPage, PDFReference, fs, stream,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  stream = require('stream');\n\n  fs = require('fs');\n\n  PDFObject = require('./object');\n\n  PDFReference = require('./reference');\n\n  PDFPage = require('./page');\n\n  PDFDocument = (function(superClass) {\n    var mixin;\n\n    extend(PDFDocument, superClass);\n\n    function PDFDocument(options1) {\n      var key, ref1, ref2, val;\n      this.options = options1 != null ? options1 : {};\n      PDFDocument.__super__.constructor.apply(this, arguments);\n      this.version = 1.3;\n      this.compress = (ref1 = this.options.compress) != null ? ref1 : true;\n      this._pageBuffer = [];\n      this._pageBufferStart = 0;\n      this._offsets = [];\n      this._waiting = 0;\n      this._ended = false;\n      this._offset = 0;\n      this._root = this.ref({\n        Type: 'Catalog',\n        Pages: this.ref({\n          Type: 'Pages',\n          Count: 0,\n          Kids: []\n        })\n      });\n      this.page = null;\n      this.initColor();\n      this.initVector();\n      this.initFonts();\n      this.initText();\n      this.initImages();\n      this.info = {\n        Producer: 'PDFKit',\n        Creator: 'PDFKit',\n        CreationDate: new Date()\n      };\n      if (this.options.info) {\n        ref2 = this.options.info;\n        for (key in ref2) {\n          val = ref2[key];\n          this.info[key] = val;\n        }\n      }\n      this._write(\"%PDF-\" + this.version);\n      this._write(\"%\\xFF\\xFF\\xFF\\xFF\");\n      if (this.options.autoFirstPage !== false) {\n        this.addPage();\n      }\n    }\n\n    mixin = function(methods) {\n      var method, name, results;\n      results = [];\n      for (name in methods) {\n        method = methods[name];\n        results.push(PDFDocument.prototype[name] = method);\n      }\n      return results;\n    };\n\n    mixin(require('./mixins/color'));\n\n    mixin(require('./mixins/vector'));\n\n    mixin(require('./mixins/fonts'));\n\n    mixin(require('./mixins/text'));\n\n    mixin(require('./mixins/images'));\n\n    mixin(require('./mixins/annotations'));\n\n    PDFDocument.prototype.addPage = function(options) {\n      var pages;\n      if (options == null) {\n        options = this.options;\n      }\n      if (!this.options.bufferPages) {\n        this.flushPages();\n      }\n      this.page = new PDFPage(this, options);\n      this._pageBuffer.push(this.page);\n      pages = this._root.data.Pages.data;\n      pages.Kids.push(this.page.dictionary);\n      pages.Count++;\n      this.x = this.page.margins.left;\n      this.y = this.page.margins.top;\n      this._ctm = [1, 0, 0, 1, 0, 0];\n      this.transform(1, 0, 0, -1, 0, this.page.height);\n      this.emit('pageAdded');\n      return this;\n    };\n\n    PDFDocument.prototype.bufferedPageRange = function() {\n      return {\n        start: this._pageBufferStart,\n        count: this._pageBuffer.length\n      };\n    };\n\n    PDFDocument.prototype.switchToPage = function(n) {\n      var page;\n      if (!(page = this._pageBuffer[n - this._pageBufferStart])) {\n        throw new Error(\"switchToPage(\" + n + \") out of bounds, current buffer covers pages \" + this._pageBufferStart + \" to \" + (this._pageBufferStart + this._pageBuffer.length - 1));\n      }\n      return this.page = page;\n    };\n\n    PDFDocument.prototype.flushPages = function() {\n      var i, len, page, pages;\n      pages = this._pageBuffer;\n      this._pageBuffer = [];\n      this._pageBufferStart += pages.length;\n      for (i = 0, len = pages.length; i < len; i++) {\n        page = pages[i];\n        page.end();\n      }\n    };\n\n    PDFDocument.prototype.ref = function(data) {\n      var ref;\n      ref = new PDFReference(this, this._offsets.length + 1, data);\n      this._offsets.push(null);\n      this._waiting++;\n      return ref;\n    };\n\n    PDFDocument.prototype._read = function() {};\n\n    PDFDocument.prototype._write = function(data) {\n      if (!Buffer.isBuffer(data)) {\n        data = new Buffer(data + '\\n', 'binary');\n      }\n      this.push(data);\n      return this._offset += data.length;\n    };\n\n    PDFDocument.prototype.addContent = function(data) {\n      this.page.write(data);\n      return this;\n    };\n\n    PDFDocument.prototype._refEnd = function(ref) {\n      this._offsets[ref.id - 1] = ref.offset;\n      if (--this._waiting === 0 && this._ended) {\n        this._finalize();\n        return this._ended = false;\n      }\n    };\n\n    PDFDocument.prototype.write = function(filename, fn) {\n      var err;\n      err = new Error('PDFDocument#write is deprecated, and will be removed in a future version of PDFKit. Please pipe the document into a Node stream.');\n      console.warn(err.stack);\n      this.pipe(fs.createWriteStream(filename));\n      this.end();\n      return this.once('end', fn);\n    };\n\n    PDFDocument.prototype.output = function(fn) {\n      throw new Error('PDFDocument#output is deprecated, and has been removed from PDFKit. Please pipe the document into a Node stream.');\n    };\n\n    PDFDocument.prototype.end = function() {\n      var font, key, name, ref1, ref2, val;\n      this.flushPages();\n      this._info = this.ref();\n      ref1 = this.info;\n      for (key in ref1) {\n        val = ref1[key];\n        if (typeof val === 'string') {\n          val = new String(val);\n        }\n        this._info.data[key] = val;\n      }\n      this._info.end();\n      ref2 = this._fontFamilies;\n      for (name in ref2) {\n        font = ref2[name];\n        font.finalize();\n      }\n      this._root.end();\n      this._root.data.Pages.end();\n      if (this._waiting === 0) {\n        return this._finalize();\n      } else {\n        return this._ended = true;\n      }\n    };\n\n    PDFDocument.prototype._finalize = function(fn) {\n      var i, len, offset, ref1, xRefOffset;\n      xRefOffset = this._offset;\n      this._write(\"xref\");\n      this._write(\"0 \" + (this._offsets.length + 1));\n      this._write(\"0000000000 65535 f \");\n      ref1 = this._offsets;\n      for (i = 0, len = ref1.length; i < len; i++) {\n        offset = ref1[i];\n        offset = ('0000000000' + offset).slice(-10);\n        this._write(offset + ' 00000 n ');\n      }\n      this._write('trailer');\n      this._write(PDFObject.convert({\n        Size: this._offsets.length + 1,\n        Root: this._root,\n        Info: this._info\n      }));\n      this._write('startxref');\n      this._write(\"\" + xRefOffset);\n      this._write('%%EOF');\n      return this.push(null);\n    };\n\n    PDFDocument.prototype.toString = function() {\n      return \"[object PDFDocument]\";\n    };\n\n    return PDFDocument;\n\n  })(stream.Readable);\n\n  module.exports = PDFDocument;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/object.js":"// Generated by CoffeeScript 1.10.0\n\n/*\nPDFObject - converts JavaScript types into their corrisponding PDF types.\nBy Devon Govett\n */\n\n(function() {\n  var PDFObject, PDFReference;\n\n  PDFObject = (function() {\n    var escapable, escapableRe, pad, swapBytes;\n\n    function PDFObject() {}\n\n    pad = function(str, length) {\n      return (Array(length + 1).join('0') + str).slice(-length);\n    };\n\n    escapableRe = /[\\n\\r\\t\\b\\f\\(\\)\\\\]/g;\n\n    escapable = {\n      '\\n': '\\\\n',\n      '\\r': '\\\\r',\n      '\\t': '\\\\t',\n      '\\b': '\\\\b',\n      '\\f': '\\\\f',\n      '\\\\': '\\\\\\\\',\n      '(': '\\\\(',\n      ')': '\\\\)'\n    };\n\n    swapBytes = function(buff) {\n      var a, i, j, l, ref;\n      l = buff.length;\n      if (l & 0x01) {\n        throw new Error(\"Buffer length must be even\");\n      } else {\n        for (i = j = 0, ref = l - 1; j < ref; i = j += 2) {\n          a = buff[i];\n          buff[i] = buff[i + 1];\n          buff[i + 1] = a;\n        }\n      }\n      return buff;\n    };\n\n    PDFObject.convert = function(object) {\n      var e, i, isUnicode, items, j, key, out, ref, string, val;\n      if (typeof object === 'string') {\n        return '/' + object;\n      } else if (object instanceof String) {\n        string = object.replace(escapableRe, function(c) {\n          return escapable[c];\n        });\n        isUnicode = false;\n        for (i = j = 0, ref = string.length; j < ref; i = j += 1) {\n          if (string.charCodeAt(i) > 0x7f) {\n            isUnicode = true;\n            break;\n          }\n        }\n        if (isUnicode) {\n          string = swapBytes(new Buffer('\\ufeff' + string, 'utf16le')).toString('binary');\n        }\n        return '(' + string + ')';\n      } else if (Buffer.isBuffer(object)) {\n        return '<' + object.toString('hex') + '>';\n      } else if (object instanceof PDFReference) {\n        return object.toString();\n      } else if (object instanceof Date) {\n        return '(D:' + pad(object.getUTCFullYear(), 4) + pad(object.getUTCMonth() + 1, 2) + pad(object.getUTCDate(), 2) + pad(object.getUTCHours(), 2) + pad(object.getUTCMinutes(), 2) + pad(object.getUTCSeconds(), 2) + 'Z)';\n      } else if (Array.isArray(object)) {\n        items = ((function() {\n          var k, len, results;\n          results = [];\n          for (k = 0, len = object.length; k < len; k++) {\n            e = object[k];\n            results.push(PDFObject.convert(e));\n          }\n          return results;\n        })()).join(' ');\n        return '[' + items + ']';\n      } else if ({}.toString.call(object) === '[object Object]') {\n        out = ['<<'];\n        for (key in object) {\n          val = object[key];\n          out.push('/' + key + ' ' + PDFObject.convert(val));\n        }\n        out.push('>>');\n        return out.join('\\n');\n      } else {\n        return '' + object;\n      }\n    };\n\n    return PDFObject;\n\n  })();\n\n  module.exports = PDFObject;\n\n  PDFReference = require('./reference');\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/reference.js":"// Generated by CoffeeScript 1.10.0\n\n/*\nPDFReference - represents a reference to another object in the PDF object heirarchy\nBy Devon Govett\n */\n\n(function() {\n  var PDFObject, PDFReference, stream, zlib,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  zlib = require('zlib');\n\n  stream = require('stream');\n\n  PDFReference = (function(superClass) {\n    extend(PDFReference, superClass);\n\n    function PDFReference(document, id, data) {\n      this.document = document;\n      this.id = id;\n      this.data = data != null ? data : {};\n      this.finalize = bind(this.finalize, this);\n      PDFReference.__super__.constructor.call(this, {\n        decodeStrings: false\n      });\n      this.gen = 0;\n      this.deflate = null;\n      this.compress = this.document.compress && !this.data.Filter;\n      this.uncompressedLength = 0;\n      this.chunks = [];\n    }\n\n    PDFReference.prototype.initDeflate = function() {\n      this.data.Filter = 'FlateDecode';\n      this.deflate = zlib.createDeflate();\n      this.deflate.on('data', (function(_this) {\n        return function(chunk) {\n          _this.chunks.push(chunk);\n          return _this.data.Length += chunk.length;\n        };\n      })(this));\n      return this.deflate.on('end', this.finalize);\n    };\n\n    PDFReference.prototype._write = function(chunk, encoding, callback) {\n      var base;\n      if (!Buffer.isBuffer(chunk)) {\n        chunk = new Buffer(chunk + '\\n', 'binary');\n      }\n      this.uncompressedLength += chunk.length;\n      if ((base = this.data).Length == null) {\n        base.Length = 0;\n      }\n      if (this.compress) {\n        if (!this.deflate) {\n          this.initDeflate();\n        }\n        this.deflate.write(chunk);\n      } else {\n        this.chunks.push(chunk);\n        this.data.Length += chunk.length;\n      }\n      return callback();\n    };\n\n    PDFReference.prototype.end = function(chunk) {\n      PDFReference.__super__.end.apply(this, arguments);\n      if (this.deflate) {\n        return this.deflate.end();\n      } else {\n        return this.finalize();\n      }\n    };\n\n    PDFReference.prototype.finalize = function() {\n      var chunk, i, len, ref;\n      this.offset = this.document._offset;\n      this.document._write(this.id + \" \" + this.gen + \" obj\");\n      this.document._write(PDFObject.convert(this.data));\n      if (this.chunks.length) {\n        this.document._write('stream');\n        ref = this.chunks;\n        for (i = 0, len = ref.length; i < len; i++) {\n          chunk = ref[i];\n          this.document._write(chunk);\n        }\n        this.chunks.length = 0;\n        this.document._write('\\nendstream');\n      }\n      this.document._write('endobj');\n      return this.document._refEnd(this);\n    };\n\n    PDFReference.prototype.toString = function() {\n      return this.id + \" \" + this.gen + \" R\";\n    };\n\n    return PDFReference;\n\n  })(stream.Writable);\n\n  module.exports = PDFReference;\n\n  PDFObject = require('./object');\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/page.js":"// Generated by CoffeeScript 1.10.0\n\n/*\nPDFPage - represents a single page in the PDF document\nBy Devon Govett\n */\n\n(function() {\n  var PDFPage;\n\n  PDFPage = (function() {\n    var DEFAULT_MARGINS, SIZES;\n\n    function PDFPage(document, options) {\n      var dimensions;\n      this.document = document;\n      if (options == null) {\n        options = {};\n      }\n      this.size = options.size || 'letter';\n      this.layout = options.layout || 'portrait';\n      if (typeof options.margin === 'number') {\n        this.margins = {\n          top: options.margin,\n          left: options.margin,\n          bottom: options.margin,\n          right: options.margin\n        };\n      } else {\n        this.margins = options.margins || DEFAULT_MARGINS;\n      }\n      dimensions = Array.isArray(this.size) ? this.size : SIZES[this.size.toUpperCase()];\n      this.width = dimensions[this.layout === 'portrait' ? 0 : 1];\n      this.height = dimensions[this.layout === 'portrait' ? 1 : 0];\n      this.content = this.document.ref();\n      this.resources = this.document.ref({\n        ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI']\n      });\n      Object.defineProperties(this, {\n        fonts: {\n          get: (function(_this) {\n            return function() {\n              var base;\n              return (base = _this.resources.data).Font != null ? base.Font : base.Font = {};\n            };\n          })(this)\n        },\n        xobjects: {\n          get: (function(_this) {\n            return function() {\n              var base;\n              return (base = _this.resources.data).XObject != null ? base.XObject : base.XObject = {};\n            };\n          })(this)\n        },\n        ext_gstates: {\n          get: (function(_this) {\n            return function() {\n              var base;\n              return (base = _this.resources.data).ExtGState != null ? base.ExtGState : base.ExtGState = {};\n            };\n          })(this)\n        },\n        patterns: {\n          get: (function(_this) {\n            return function() {\n              var base;\n              return (base = _this.resources.data).Pattern != null ? base.Pattern : base.Pattern = {};\n            };\n          })(this)\n        },\n        annotations: {\n          get: (function(_this) {\n            return function() {\n              var base;\n              return (base = _this.dictionary.data).Annots != null ? base.Annots : base.Annots = [];\n            };\n          })(this)\n        }\n      });\n      this.dictionary = this.document.ref({\n        Type: 'Page',\n        Parent: this.document._root.data.Pages,\n        MediaBox: [0, 0, this.width, this.height],\n        Contents: this.content,\n        Resources: this.resources\n      });\n    }\n\n    PDFPage.prototype.maxY = function() {\n      return this.height - this.margins.bottom;\n    };\n\n    PDFPage.prototype.write = function(chunk) {\n      return this.content.write(chunk);\n    };\n\n    PDFPage.prototype.end = function() {\n      this.dictionary.end();\n      this.resources.end();\n      return this.content.end();\n    };\n\n    DEFAULT_MARGINS = {\n      top: 72,\n      left: 72,\n      bottom: 72,\n      right: 72\n    };\n\n    SIZES = {\n      '4A0': [4767.87, 6740.79],\n      '2A0': [3370.39, 4767.87],\n      A0: [2383.94, 3370.39],\n      A1: [1683.78, 2383.94],\n      A2: [1190.55, 1683.78],\n      A3: [841.89, 1190.55],\n      A4: [595.28, 841.89],\n      A5: [419.53, 595.28],\n      A6: [297.64, 419.53],\n      A7: [209.76, 297.64],\n      A8: [147.40, 209.76],\n      A9: [104.88, 147.40],\n      A10: [73.70, 104.88],\n      B0: [2834.65, 4008.19],\n      B1: [2004.09, 2834.65],\n      B2: [1417.32, 2004.09],\n      B3: [1000.63, 1417.32],\n      B4: [708.66, 1000.63],\n      B5: [498.90, 708.66],\n      B6: [354.33, 498.90],\n      B7: [249.45, 354.33],\n      B8: [175.75, 249.45],\n      B9: [124.72, 175.75],\n      B10: [87.87, 124.72],\n      C0: [2599.37, 3676.54],\n      C1: [1836.85, 2599.37],\n      C2: [1298.27, 1836.85],\n      C3: [918.43, 1298.27],\n      C4: [649.13, 918.43],\n      C5: [459.21, 649.13],\n      C6: [323.15, 459.21],\n      C7: [229.61, 323.15],\n      C8: [161.57, 229.61],\n      C9: [113.39, 161.57],\n      C10: [79.37, 113.39],\n      RA0: [2437.80, 3458.27],\n      RA1: [1729.13, 2437.80],\n      RA2: [1218.90, 1729.13],\n      RA3: [864.57, 1218.90],\n      RA4: [609.45, 864.57],\n      SRA0: [2551.18, 3628.35],\n      SRA1: [1814.17, 2551.18],\n      SRA2: [1275.59, 1814.17],\n      SRA3: [907.09, 1275.59],\n      SRA4: [637.80, 907.09],\n      EXECUTIVE: [521.86, 756.00],\n      FOLIO: [612.00, 936.00],\n      LEGAL: [612.00, 1008.00],\n      LETTER: [612.00, 792.00],\n      TABLOID: [792.00, 1224.00]\n    };\n\n    return PDFPage;\n\n  })();\n\n  module.exports = PDFPage;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/mixins/color.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var PDFGradient, PDFLinearGradient, PDFRadialGradient, namedColors, ref;\n\n  ref = require('../gradient'), PDFGradient = ref.PDFGradient, PDFLinearGradient = ref.PDFLinearGradient, PDFRadialGradient = ref.PDFRadialGradient;\n\n  module.exports = {\n    initColor: function() {\n      this._opacityRegistry = {};\n      this._opacityCount = 0;\n      return this._gradCount = 0;\n    },\n    _normalizeColor: function(color) {\n      var hex, part;\n      if (color instanceof PDFGradient) {\n        return color;\n      }\n      if (typeof color === 'string') {\n        if (color.charAt(0) === '#') {\n          if (color.length === 4) {\n            color = color.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, \"#$1$1$2$2$3$3\");\n          }\n          hex = parseInt(color.slice(1), 16);\n          color = [hex >> 16, hex >> 8 & 0xff, hex & 0xff];\n        } else if (namedColors[color]) {\n          color = namedColors[color];\n        }\n      }\n      if (Array.isArray(color)) {\n        if (color.length === 3) {\n          color = (function() {\n            var i, len, results;\n            results = [];\n            for (i = 0, len = color.length; i < len; i++) {\n              part = color[i];\n              results.push(part / 255);\n            }\n            return results;\n          })();\n        } else if (color.length === 4) {\n          color = (function() {\n            var i, len, results;\n            results = [];\n            for (i = 0, len = color.length; i < len; i++) {\n              part = color[i];\n              results.push(part / 100);\n            }\n            return results;\n          })();\n        }\n        return color;\n      }\n      return null;\n    },\n    _setColor: function(color, stroke) {\n      var gstate, name, op, space;\n      color = this._normalizeColor(color);\n      if (!color) {\n        return false;\n      }\n      if (this._sMasked) {\n        gstate = this.ref({\n          Type: 'ExtGState',\n          SMask: 'None'\n        });\n        gstate.end();\n        name = \"Gs\" + (++this._opacityCount);\n        this.page.ext_gstates[name] = gstate;\n        this.addContent(\"/\" + name + \" gs\");\n        this._sMasked = false;\n      }\n      op = stroke ? 'SCN' : 'scn';\n      if (color instanceof PDFGradient) {\n        this._setColorSpace('Pattern', stroke);\n        color.apply(op);\n      } else {\n        space = color.length === 4 ? 'DeviceCMYK' : 'DeviceRGB';\n        this._setColorSpace(space, stroke);\n        color = color.join(' ');\n        this.addContent(color + \" \" + op);\n      }\n      return true;\n    },\n    _setColorSpace: function(space, stroke) {\n      var op;\n      op = stroke ? 'CS' : 'cs';\n      return this.addContent(\"/\" + space + \" \" + op);\n    },\n    fillColor: function(color, opacity) {\n      var set;\n      if (opacity == null) {\n        opacity = 1;\n      }\n      set = this._setColor(color, false);\n      if (set) {\n        this.fillOpacity(opacity);\n      }\n      this._fillColor = [color, opacity];\n      return this;\n    },\n    strokeColor: function(color, opacity) {\n      var set;\n      if (opacity == null) {\n        opacity = 1;\n      }\n      set = this._setColor(color, true);\n      if (set) {\n        this.strokeOpacity(opacity);\n      }\n      return this;\n    },\n    opacity: function(opacity) {\n      this._doOpacity(opacity, opacity);\n      return this;\n    },\n    fillOpacity: function(opacity) {\n      this._doOpacity(opacity, null);\n      return this;\n    },\n    strokeOpacity: function(opacity) {\n      this._doOpacity(null, opacity);\n      return this;\n    },\n    _doOpacity: function(fillOpacity, strokeOpacity) {\n      var dictionary, id, key, name, ref1;\n      if (!((fillOpacity != null) || (strokeOpacity != null))) {\n        return;\n      }\n      if (fillOpacity != null) {\n        fillOpacity = Math.max(0, Math.min(1, fillOpacity));\n      }\n      if (strokeOpacity != null) {\n        strokeOpacity = Math.max(0, Math.min(1, strokeOpacity));\n      }\n      key = fillOpacity + \"_\" + strokeOpacity;\n      if (this._opacityRegistry[key]) {\n        ref1 = this._opacityRegistry[key], dictionary = ref1[0], name = ref1[1];\n      } else {\n        dictionary = {\n          Type: 'ExtGState'\n        };\n        if (fillOpacity != null) {\n          dictionary.ca = fillOpacity;\n        }\n        if (strokeOpacity != null) {\n          dictionary.CA = strokeOpacity;\n        }\n        dictionary = this.ref(dictionary);\n        dictionary.end();\n        id = ++this._opacityCount;\n        name = \"Gs\" + id;\n        this._opacityRegistry[key] = [dictionary, name];\n      }\n      this.page.ext_gstates[name] = dictionary;\n      return this.addContent(\"/\" + name + \" gs\");\n    },\n    linearGradient: function(x1, y1, x2, y2) {\n      return new PDFLinearGradient(this, x1, y1, x2, y2);\n    },\n    radialGradient: function(x1, y1, r1, x2, y2, r2) {\n      return new PDFRadialGradient(this, x1, y1, r1, x2, y2, r2);\n    }\n  };\n\n  namedColors = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    grey: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/gradient.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var PDFGradient, PDFLinearGradient, PDFRadialGradient,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  PDFGradient = (function() {\n    function PDFGradient(doc) {\n      this.doc = doc;\n      this.stops = [];\n      this.embedded = false;\n      this.transform = [1, 0, 0, 1, 0, 0];\n      this._colorSpace = 'DeviceRGB';\n    }\n\n    PDFGradient.prototype.stop = function(pos, color, opacity) {\n      if (opacity == null) {\n        opacity = 1;\n      }\n      opacity = Math.max(0, Math.min(1, opacity));\n      this.stops.push([pos, this.doc._normalizeColor(color), opacity]);\n      return this;\n    };\n\n    PDFGradient.prototype.embed = function() {\n      var bounds, dx, dy, encode, fn, form, grad, group, gstate, i, j, k, last, len, m, m0, m1, m11, m12, m2, m21, m22, m3, m4, m5, name, pattern, ref, ref1, ref2, resources, sMask, shader, stop, stops, v;\n      if (this.embedded || this.stops.length === 0) {\n        return;\n      }\n      this.embedded = true;\n      last = this.stops[this.stops.length - 1];\n      if (last[0] < 1) {\n        this.stops.push([1, last[1], last[2]]);\n      }\n      bounds = [];\n      encode = [];\n      stops = [];\n      for (i = j = 0, ref = this.stops.length - 1; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        encode.push(0, 1);\n        if (i + 2 !== this.stops.length) {\n          bounds.push(this.stops[i + 1][0]);\n        }\n        fn = this.doc.ref({\n          FunctionType: 2,\n          Domain: [0, 1],\n          C0: this.stops[i + 0][1],\n          C1: this.stops[i + 1][1],\n          N: 1\n        });\n        stops.push(fn);\n        fn.end();\n      }\n      if (stops.length === 1) {\n        fn = stops[0];\n      } else {\n        fn = this.doc.ref({\n          FunctionType: 3,\n          Domain: [0, 1],\n          Functions: stops,\n          Bounds: bounds,\n          Encode: encode\n        });\n        fn.end();\n      }\n      this.id = 'Sh' + (++this.doc._gradCount);\n      m = this.doc._ctm.slice();\n      m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], m4 = m[4], m5 = m[5];\n      ref1 = this.transform, m11 = ref1[0], m12 = ref1[1], m21 = ref1[2], m22 = ref1[3], dx = ref1[4], dy = ref1[5];\n      m[0] = m0 * m11 + m2 * m12;\n      m[1] = m1 * m11 + m3 * m12;\n      m[2] = m0 * m21 + m2 * m22;\n      m[3] = m1 * m21 + m3 * m22;\n      m[4] = m0 * dx + m2 * dy + m4;\n      m[5] = m1 * dx + m3 * dy + m5;\n      shader = this.shader(fn);\n      shader.end();\n      pattern = this.doc.ref({\n        Type: 'Pattern',\n        PatternType: 2,\n        Shading: shader,\n        Matrix: (function() {\n          var k, len, results;\n          results = [];\n          for (k = 0, len = m.length; k < len; k++) {\n            v = m[k];\n            results.push(+v.toFixed(5));\n          }\n          return results;\n        })()\n      });\n      this.doc.page.patterns[this.id] = pattern;\n      pattern.end();\n      if (this.stops.some(function(stop) {\n        return stop[2] < 1;\n      })) {\n        grad = this.opacityGradient();\n        grad._colorSpace = 'DeviceGray';\n        ref2 = this.stops;\n        for (k = 0, len = ref2.length; k < len; k++) {\n          stop = ref2[k];\n          grad.stop(stop[0], [stop[2]]);\n        }\n        grad = grad.embed();\n        group = this.doc.ref({\n          Type: 'Group',\n          S: 'Transparency',\n          CS: 'DeviceGray'\n        });\n        group.end();\n        resources = this.doc.ref({\n          ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n          Shading: {\n            Sh1: grad.data.Shading\n          }\n        });\n        resources.end();\n        form = this.doc.ref({\n          Type: 'XObject',\n          Subtype: 'Form',\n          FormType: 1,\n          BBox: [0, 0, this.doc.page.width, this.doc.page.height],\n          Group: group,\n          Resources: resources\n        });\n        form.end(\"/Sh1 sh\");\n        sMask = this.doc.ref({\n          Type: 'Mask',\n          S: 'Luminosity',\n          G: form\n        });\n        sMask.end();\n        gstate = this.doc.ref({\n          Type: 'ExtGState',\n          SMask: sMask\n        });\n        this.opacity_id = ++this.doc._opacityCount;\n        name = \"Gs\" + this.opacity_id;\n        this.doc.page.ext_gstates[name] = gstate;\n        gstate.end();\n      }\n      return pattern;\n    };\n\n    PDFGradient.prototype.apply = function(op) {\n      if (!this.embedded) {\n        this.embed();\n      }\n      this.doc.addContent(\"/\" + this.id + \" \" + op);\n      if (this.opacity_id) {\n        this.doc.addContent(\"/Gs\" + this.opacity_id + \" gs\");\n        return this.doc._sMasked = true;\n      }\n    };\n\n    return PDFGradient;\n\n  })();\n\n  PDFLinearGradient = (function(superClass) {\n    extend(PDFLinearGradient, superClass);\n\n    function PDFLinearGradient(doc, x1, y1, x2, y2) {\n      this.doc = doc;\n      this.x1 = x1;\n      this.y1 = y1;\n      this.x2 = x2;\n      this.y2 = y2;\n      PDFLinearGradient.__super__.constructor.apply(this, arguments);\n    }\n\n    PDFLinearGradient.prototype.shader = function(fn) {\n      return this.doc.ref({\n        ShadingType: 2,\n        ColorSpace: this._colorSpace,\n        Coords: [this.x1, this.y1, this.x2, this.y2],\n        Function: fn,\n        Extend: [true, true]\n      });\n    };\n\n    PDFLinearGradient.prototype.opacityGradient = function() {\n      return new PDFLinearGradient(this.doc, this.x1, this.y1, this.x2, this.y2);\n    };\n\n    return PDFLinearGradient;\n\n  })(PDFGradient);\n\n  PDFRadialGradient = (function(superClass) {\n    extend(PDFRadialGradient, superClass);\n\n    function PDFRadialGradient(doc, x1, y1, r1, x2, y2, r2) {\n      this.doc = doc;\n      this.x1 = x1;\n      this.y1 = y1;\n      this.r1 = r1;\n      this.x2 = x2;\n      this.y2 = y2;\n      this.r2 = r2;\n      PDFRadialGradient.__super__.constructor.apply(this, arguments);\n    }\n\n    PDFRadialGradient.prototype.shader = function(fn) {\n      return this.doc.ref({\n        ShadingType: 3,\n        ColorSpace: this._colorSpace,\n        Coords: [this.x1, this.y1, this.r1, this.x2, this.y2, this.r2],\n        Function: fn,\n        Extend: [true, true]\n      });\n    };\n\n    PDFRadialGradient.prototype.opacityGradient = function() {\n      return new PDFRadialGradient(this.doc, this.x1, this.y1, this.r1, this.x2, this.y2, this.r2);\n    };\n\n    return PDFRadialGradient;\n\n  })(PDFGradient);\n\n  module.exports = {\n    PDFGradient: PDFGradient,\n    PDFLinearGradient: PDFLinearGradient,\n    PDFRadialGradient: PDFRadialGradient\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/mixins/vector.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var KAPPA, SVGPath,\n    slice = [].slice;\n\n  SVGPath = require('../path');\n\n  KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\n  module.exports = {\n    initVector: function() {\n      this._ctm = [1, 0, 0, 1, 0, 0];\n      return this._ctmStack = [];\n    },\n    save: function() {\n      this._ctmStack.push(this._ctm.slice());\n      return this.addContent('q');\n    },\n    restore: function() {\n      this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0];\n      return this.addContent('Q');\n    },\n    closePath: function() {\n      return this.addContent('h');\n    },\n    lineWidth: function(w) {\n      return this.addContent(w + \" w\");\n    },\n    _CAP_STYLES: {\n      BUTT: 0,\n      ROUND: 1,\n      SQUARE: 2\n    },\n    lineCap: function(c) {\n      if (typeof c === 'string') {\n        c = this._CAP_STYLES[c.toUpperCase()];\n      }\n      return this.addContent(c + \" J\");\n    },\n    _JOIN_STYLES: {\n      MITER: 0,\n      ROUND: 1,\n      BEVEL: 2\n    },\n    lineJoin: function(j) {\n      if (typeof j === 'string') {\n        j = this._JOIN_STYLES[j.toUpperCase()];\n      }\n      return this.addContent(j + \" j\");\n    },\n    miterLimit: function(m) {\n      return this.addContent(m + \" M\");\n    },\n    dash: function(length, options) {\n      var phase, ref, space;\n      if (options == null) {\n        options = {};\n      }\n      if (length == null) {\n        return this;\n      }\n      space = (ref = options.space) != null ? ref : length;\n      phase = options.phase || 0;\n      return this.addContent(\"[\" + length + \" \" + space + \"] \" + phase + \" d\");\n    },\n    undash: function() {\n      return this.addContent(\"[] 0 d\");\n    },\n    moveTo: function(x, y) {\n      return this.addContent(x + \" \" + y + \" m\");\n    },\n    lineTo: function(x, y) {\n      return this.addContent(x + \" \" + y + \" l\");\n    },\n    bezierCurveTo: function(cp1x, cp1y, cp2x, cp2y, x, y) {\n      return this.addContent(cp1x + \" \" + cp1y + \" \" + cp2x + \" \" + cp2y + \" \" + x + \" \" + y + \" c\");\n    },\n    quadraticCurveTo: function(cpx, cpy, x, y) {\n      return this.addContent(cpx + \" \" + cpy + \" \" + x + \" \" + y + \" v\");\n    },\n    rect: function(x, y, w, h) {\n      return this.addContent(x + \" \" + y + \" \" + w + \" \" + h + \" re\");\n    },\n    roundedRect: function(x, y, w, h, r) {\n      if (r == null) {\n        r = 0;\n      }\n      this.moveTo(x + r, y);\n      this.lineTo(x + w - r, y);\n      this.quadraticCurveTo(x + w, y, x + w, y + r);\n      this.lineTo(x + w, y + h - r);\n      this.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n      this.lineTo(x + r, y + h);\n      this.quadraticCurveTo(x, y + h, x, y + h - r);\n      this.lineTo(x, y + r);\n      return this.quadraticCurveTo(x, y, x + r, y);\n    },\n    ellipse: function(x, y, r1, r2) {\n      var ox, oy, xe, xm, ye, ym;\n      if (r2 == null) {\n        r2 = r1;\n      }\n      x -= r1;\n      y -= r2;\n      ox = r1 * KAPPA;\n      oy = r2 * KAPPA;\n      xe = x + r1 * 2;\n      ye = y + r2 * 2;\n      xm = x + r1;\n      ym = y + r2;\n      this.moveTo(x, ym);\n      this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n      this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n      this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n      this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n      return this.closePath();\n    },\n    circle: function(x, y, radius) {\n      return this.ellipse(x, y, radius);\n    },\n    polygon: function() {\n      var i, len, point, points;\n      points = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      this.moveTo.apply(this, points.shift());\n      for (i = 0, len = points.length; i < len; i++) {\n        point = points[i];\n        this.lineTo.apply(this, point);\n      }\n      return this.closePath();\n    },\n    path: function(path) {\n      SVGPath.apply(this, path);\n      return this;\n    },\n    _windingRule: function(rule) {\n      if (/even-?odd/.test(rule)) {\n        return '*';\n      }\n      return '';\n    },\n    fill: function(color, rule) {\n      if (/(even-?odd)|(non-?zero)/.test(color)) {\n        rule = color;\n        color = null;\n      }\n      if (color) {\n        this.fillColor(color);\n      }\n      return this.addContent('f' + this._windingRule(rule));\n    },\n    stroke: function(color) {\n      if (color) {\n        this.strokeColor(color);\n      }\n      return this.addContent('S');\n    },\n    fillAndStroke: function(fillColor, strokeColor, rule) {\n      var isFillRule;\n      if (strokeColor == null) {\n        strokeColor = fillColor;\n      }\n      isFillRule = /(even-?odd)|(non-?zero)/;\n      if (isFillRule.test(fillColor)) {\n        rule = fillColor;\n        fillColor = null;\n      }\n      if (isFillRule.test(strokeColor)) {\n        rule = strokeColor;\n        strokeColor = fillColor;\n      }\n      if (fillColor) {\n        this.fillColor(fillColor);\n        this.strokeColor(strokeColor);\n      }\n      return this.addContent('B' + this._windingRule(rule));\n    },\n    clip: function(rule) {\n      return this.addContent('W' + this._windingRule(rule) + ' n');\n    },\n    transform: function(m11, m12, m21, m22, dx, dy) {\n      var m, m0, m1, m2, m3, m4, m5, v, values;\n      m = this._ctm;\n      m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], m4 = m[4], m5 = m[5];\n      m[0] = m0 * m11 + m2 * m12;\n      m[1] = m1 * m11 + m3 * m12;\n      m[2] = m0 * m21 + m2 * m22;\n      m[3] = m1 * m21 + m3 * m22;\n      m[4] = m0 * dx + m2 * dy + m4;\n      m[5] = m1 * dx + m3 * dy + m5;\n      values = ((function() {\n        var i, len, ref, results;\n        ref = [m11, m12, m21, m22, dx, dy];\n        results = [];\n        for (i = 0, len = ref.length; i < len; i++) {\n          v = ref[i];\n          results.push(+v.toFixed(5));\n        }\n        return results;\n      })()).join(' ');\n      return this.addContent(values + \" cm\");\n    },\n    translate: function(x, y) {\n      return this.transform(1, 0, 0, 1, x, y);\n    },\n    rotate: function(angle, options) {\n      var cos, rad, ref, sin, x, x1, y, y1;\n      if (options == null) {\n        options = {};\n      }\n      rad = angle * Math.PI / 180;\n      cos = Math.cos(rad);\n      sin = Math.sin(rad);\n      x = y = 0;\n      if (options.origin != null) {\n        ref = options.origin, x = ref[0], y = ref[1];\n        x1 = x * cos - y * sin;\n        y1 = x * sin + y * cos;\n        x -= x1;\n        y -= y1;\n      }\n      return this.transform(cos, sin, -sin, cos, x, y);\n    },\n    scale: function(xFactor, yFactor, options) {\n      var ref, x, y;\n      if (yFactor == null) {\n        yFactor = xFactor;\n      }\n      if (options == null) {\n        options = {};\n      }\n      if (arguments.length === 2) {\n        yFactor = xFactor;\n        options = yFactor;\n      }\n      x = y = 0;\n      if (options.origin != null) {\n        ref = options.origin, x = ref[0], y = ref[1];\n        x -= xFactor * x;\n        y -= yFactor * y;\n      }\n      return this.transform(xFactor, 0, 0, yFactor, x, y);\n    }\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/path.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var SVGPath;\n\n  SVGPath = (function() {\n    var apply, arcToSegments, cx, cy, fixRoundingError, parameters, parse, px, py, runners, segmentToBezier, solveArc, sx, sy;\n\n    function SVGPath() {}\n\n    SVGPath.apply = function(doc, path) {\n      var commands;\n      commands = parse(path);\n      return apply(commands, doc);\n    };\n\n    parameters = {\n      A: 7,\n      a: 7,\n      C: 6,\n      c: 6,\n      H: 1,\n      h: 1,\n      L: 2,\n      l: 2,\n      M: 2,\n      m: 2,\n      Q: 4,\n      q: 4,\n      S: 4,\n      s: 4,\n      T: 2,\n      t: 2,\n      V: 1,\n      v: 1,\n      Z: 0,\n      z: 0\n    };\n\n    parse = function(path) {\n      var args, c, cmd, curArg, foundDecimal, j, len, params, ret;\n      ret = [];\n      args = [];\n      curArg = \"\";\n      foundDecimal = false;\n      params = 0;\n      for (j = 0, len = path.length; j < len; j++) {\n        c = path[j];\n        if (parameters[c] != null) {\n          params = parameters[c];\n          if (cmd) {\n            if (curArg.length > 0) {\n              args[args.length] = +curArg;\n            }\n            ret[ret.length] = {\n              cmd: cmd,\n              args: args\n            };\n            args = [];\n            curArg = \"\";\n            foundDecimal = false;\n          }\n          cmd = c;\n        } else if ((c === \" \" || c === \",\") || (c === \"-\" && curArg.length > 0 && curArg[curArg.length - 1] !== 'e') || (c === \".\" && foundDecimal)) {\n          if (curArg.length === 0) {\n            continue;\n          }\n          if (args.length === params) {\n            ret[ret.length] = {\n              cmd: cmd,\n              args: args\n            };\n            args = [+curArg];\n            if (cmd === \"M\") {\n              cmd = \"L\";\n            }\n            if (cmd === \"m\") {\n              cmd = \"l\";\n            }\n          } else {\n            args[args.length] = +curArg;\n          }\n          foundDecimal = c === \".\";\n          curArg = c === '-' || c === '.' ? c : '';\n        } else {\n          curArg += c;\n          if (c === '.') {\n            foundDecimal = true;\n          }\n        }\n      }\n      if (curArg.length > 0) {\n        if (args.length === params) {\n          ret[ret.length] = {\n            cmd: cmd,\n            args: args\n          };\n          args = [+curArg];\n          if (cmd === \"M\") {\n            cmd = \"L\";\n          }\n          if (cmd === \"m\") {\n            cmd = \"l\";\n          }\n        } else {\n          args[args.length] = +curArg;\n        }\n      }\n      ret[ret.length] = {\n        cmd: cmd,\n        args: args\n      };\n      return ret;\n    };\n\n    cx = cy = px = py = sx = sy = 0;\n\n    apply = function(commands, doc) {\n      var c, i, j, len, name;\n      cx = cy = px = py = sx = sy = 0;\n      for (i = j = 0, len = commands.length; j < len; i = ++j) {\n        c = commands[i];\n        if (typeof runners[name = c.cmd] === \"function\") {\n          runners[name](doc, c.args);\n        }\n      }\n      return cx = cy = px = py = 0;\n    };\n\n    runners = {\n      M: function(doc, a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return doc.moveTo(cx, cy);\n      },\n      m: function(doc, a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return doc.moveTo(cx, cy);\n      },\n      C: function(doc, a) {\n        cx = a[4];\n        cy = a[5];\n        px = a[2];\n        py = a[3];\n        return doc.bezierCurveTo.apply(doc, a);\n      },\n      c: function(doc, a) {\n        doc.bezierCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n        px = cx + a[2];\n        py = cy + a[3];\n        cx += a[4];\n        return cy += a[5];\n      },\n      S: function(doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        }\n        doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        return cy = a[3];\n      },\n      s: function(doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        }\n        doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        return cy += a[3];\n      },\n      Q: function(doc, a) {\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        cy = a[3];\n        return doc.quadraticCurveTo(a[0], a[1], cx, cy);\n      },\n      q: function(doc, a) {\n        doc.quadraticCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        return cy += a[3];\n      },\n      T: function(doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        } else {\n          px = cx - (px - cx);\n          py = cy - (py - cy);\n        }\n        doc.quadraticCurveTo(px, py, a[0], a[1]);\n        px = cx - (px - cx);\n        py = cy - (py - cy);\n        cx = a[0];\n        return cy = a[1];\n      },\n      t: function(doc, a) {\n        if (px === null) {\n          px = cx;\n          py = cy;\n        } else {\n          px = cx - (px - cx);\n          py = cy - (py - cy);\n        }\n        doc.quadraticCurveTo(px, py, cx + a[0], cy + a[1]);\n        cx += a[0];\n        return cy += a[1];\n      },\n      A: function(doc, a) {\n        solveArc(doc, cx, cy, a);\n        cx = a[5];\n        return cy = a[6];\n      },\n      a: function(doc, a) {\n        a[5] += cx;\n        a[6] += cy;\n        solveArc(doc, cx, cy, a);\n        cx = a[5];\n        return cy = a[6];\n      },\n      L: function(doc, a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      l: function(doc, a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      H: function(doc, a) {\n        cx = a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      h: function(doc, a) {\n        cx += a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      V: function(doc, a) {\n        cy = a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      v: function(doc, a) {\n        cy += a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n      },\n      Z: function(doc) {\n        doc.closePath();\n        cx = sx;\n        return cy = sy;\n      },\n      z: function(doc) {\n        doc.closePath();\n        cx = sx;\n        return cy = sy;\n      }\n    };\n\n    solveArc = function(doc, x, y, coords) {\n      var bez, ex, ey, j, large, len, results, rot, rx, ry, seg, segs, sweep;\n      rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], ex = coords[5], ey = coords[6];\n      segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n      results = [];\n      for (j = 0, len = segs.length; j < len; j++) {\n        seg = segs[j];\n        bez = segmentToBezier.apply(null, seg);\n        results.push(doc.bezierCurveTo.apply(doc, bez));\n      }\n      return results;\n    };\n\n    arcToSegments = function(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n      var a00, a01, a10, a11, cos_th, d, i, j, pl, ref, result, segments, sfactor, sfactor_sq, sin_th, th, th0, th1, th2, th3, th_arc, x0, x1, xc, y0, y1, yc;\n      th = rotateX * (Math.PI / 180);\n      sin_th = Math.sin(th);\n      cos_th = Math.cos(th);\n      rx = Math.abs(rx);\n      ry = Math.abs(ry);\n      px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n      py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n      pl = (px * px) / (rx * rx) + (py * py) / (ry * ry);\n      if (pl > 1) {\n        pl = Math.sqrt(pl);\n        rx *= pl;\n        ry *= pl;\n      }\n      a00 = cos_th / rx;\n      a01 = sin_th / rx;\n      a10 = (-sin_th) / ry;\n      a11 = cos_th / ry;\n      x0 = a00 * ox + a01 * oy;\n      y0 = a10 * ox + a11 * oy;\n      x1 = a00 * x + a01 * y;\n      y1 = a10 * x + a11 * y;\n      d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n      sfactor_sq = 1 / d - 0.25;\n      if (sfactor_sq < 0) {\n        sfactor_sq = 0;\n      }\n      sfactor = Math.sqrt(sfactor_sq);\n      if (sweep === large) {\n        sfactor = -sfactor;\n      }\n      xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n      yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n      th0 = Math.atan2(y0 - yc, x0 - xc);\n      th1 = Math.atan2(y1 - yc, x1 - xc);\n      th_arc = th1 - th0;\n      if (th_arc < 0 && sweep === 1) {\n        th_arc += 2 * Math.PI;\n      } else if (th_arc > 0 && sweep === 0) {\n        th_arc -= 2 * Math.PI;\n      }\n      segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n      result = [];\n      for (i = j = 0, ref = segments; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        th2 = th0 + i * th_arc / segments;\n        th3 = th0 + (i + 1) * th_arc / segments;\n        result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n      }\n      return result;\n    };\n\n    segmentToBezier = function(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n      var a00, a01, a10, a11, t, th_half, x1, x2, x3, y1, y2, y3;\n      a00 = cos_th * rx;\n      a01 = -sin_th * ry;\n      a10 = sin_th * rx;\n      a11 = cos_th * ry;\n      th_half = 0.5 * (th1 - th0);\n      t = (8 / 3) * Math.sin(th_half * 0.5) * Math.sin(th_half * 0.5) / Math.sin(th_half);\n      x1 = fixRoundingError(cx + Math.cos(th0) - t * Math.sin(th0));\n      y1 = fixRoundingError(cy + Math.sin(th0) + t * Math.cos(th0));\n      x3 = fixRoundingError(cx + Math.cos(th1));\n      y3 = fixRoundingError(cy + Math.sin(th1));\n      x2 = fixRoundingError(x3 + t * Math.sin(th1));\n      y2 = fixRoundingError(y3 - t * Math.cos(th1));\n      return [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];\n    };\n\n    fixRoundingError = function(x) {\n      if (Math.abs(Math.round(x) - x) < 0.0000000000001) {\n        return Math.round(x);\n      }\n      return x;\n    };\n\n    return SVGPath;\n\n  })();\n\n  module.exports = SVGPath;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/mixins/fonts.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var PDFFont;\n\n  PDFFont = require('../font');\n\n  module.exports = {\n    initFonts: function() {\n      this._fontFamilies = {};\n      this._fontCount = 0;\n      this._fontSize = 12;\n      this._font = null;\n      this._registeredFonts = {};\n      return this.font('Helvetica');\n    },\n    font: function(src, family, size) {\n      var cacheKey, font, id, ref;\n      if (typeof family === 'number') {\n        size = family;\n        family = null;\n      }\n      if (typeof src === 'string' && this._registeredFonts[src]) {\n        cacheKey = src;\n        ref = this._registeredFonts[src], src = ref.src, family = ref.family;\n      } else {\n        cacheKey = family || src;\n        if (typeof cacheKey !== 'string') {\n          cacheKey = null;\n        }\n      }\n      if (size != null) {\n        this.fontSize(size);\n      }\n      if (font = this._fontFamilies[cacheKey]) {\n        this._font = font;\n        return this;\n      }\n      id = 'F' + (++this._fontCount);\n      this._font = PDFFont.open(this, src, family, id);\n      if (font = this._fontFamilies[this._font.name]) {\n        this._font = font;\n        return this;\n      }\n      if (cacheKey) {\n        this._fontFamilies[cacheKey] = this._font;\n      }\n      this._fontFamilies[this._font.name] = this._font;\n      return this;\n    },\n    fontSize: function(_fontSize) {\n      this._fontSize = _fontSize;\n      return this;\n    },\n    currentLineHeight: function(includeGap) {\n      if (includeGap == null) {\n        includeGap = false;\n      }\n      return this._font.lineHeight(this._fontSize, includeGap);\n    },\n    registerFont: function(name, src, family) {\n      this._registeredFonts[name] = {\n        src: src,\n        family: family\n      };\n      return this;\n    }\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/font.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var EmbeddedFont, PDFFont, StandardFont, fontkit;\n\n  fontkit = require('fontkit');\n\n  PDFFont = (function() {\n    PDFFont.open = function(document, src, family, id) {\n      var font;\n      if (typeof src === 'string') {\n        if (StandardFont.isStandardFont(src)) {\n          return new StandardFont(document, src, id);\n        }\n        font = fontkit.openSync(src, family);\n      } else if (Buffer.isBuffer(src)) {\n        font = fontkit.create(src, family);\n      } else if (src instanceof Uint8Array) {\n        font = fontkit.create(new Buffer(src), family);\n      } else if (src instanceof ArrayBuffer) {\n        font = fontkit.create(new Buffer(new Uint8Array(src)), family);\n      }\n      if (font == null) {\n        throw new Error('Not a supported font format or standard PDF font.');\n      }\n      return new EmbeddedFont(document, font, id);\n    };\n\n    function PDFFont() {\n      throw new Error('Cannot construct a PDFFont directly.');\n    }\n\n    PDFFont.prototype.encode = function(text) {\n      throw new Error('Must be implemented by subclasses');\n    };\n\n    PDFFont.prototype.widthOfString = function(text) {\n      throw new Error('Must be implemented by subclasses');\n    };\n\n    PDFFont.prototype.ref = function() {\n      return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();\n    };\n\n    PDFFont.prototype.finalize = function() {\n      if (this.embedded || (this.dictionary == null)) {\n        return;\n      }\n      this.embed();\n      return this.embedded = true;\n    };\n\n    PDFFont.prototype.embed = function() {\n      throw new Error('Must be implemented by subclasses');\n    };\n\n    PDFFont.prototype.lineHeight = function(size, includeGap) {\n      var gap;\n      if (includeGap == null) {\n        includeGap = false;\n      }\n      gap = includeGap ? this.lineGap : 0;\n      return (this.ascender + gap - this.descender) / 1000 * size;\n    };\n\n    return PDFFont;\n\n  })();\n\n  module.exports = PDFFont;\n\n  StandardFont = require('./font/standard');\n\n  EmbeddedFont = require('./font/embedded');\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/font/standard.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var AFMFont, PDFFont, StandardFont, fs,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  AFMFont = require('./afm');\n\n  PDFFont = require('../font');\n\n  fs = require('fs');\n\n  StandardFont = (function(superClass) {\n    var STANDARD_FONTS;\n\n    extend(StandardFont, superClass);\n\n    function StandardFont(document, name1, id) {\n      var ref;\n      this.document = document;\n      this.name = name1;\n      this.id = id;\n      this.font = new AFMFont(STANDARD_FONTS[this.name]());\n      ref = this.font, this.ascender = ref.ascender, this.descender = ref.descender, this.bbox = ref.bbox, this.lineGap = ref.lineGap;\n    }\n\n    StandardFont.prototype.embed = function() {\n      this.dictionary.data = {\n        Type: 'Font',\n        BaseFont: this.name,\n        Subtype: 'Type1',\n        Encoding: 'WinAnsiEncoding'\n      };\n      return this.dictionary.end();\n    };\n\n    StandardFont.prototype.encode = function(text) {\n      var advances, encoded, glyph, glyphs, i, j, len, positions;\n      encoded = this.font.encodeText(text);\n      glyphs = this.font.glyphsForString('' + text);\n      advances = this.font.advancesForGlyphs(glyphs);\n      positions = [];\n      for (i = j = 0, len = glyphs.length; j < len; i = ++j) {\n        glyph = glyphs[i];\n        positions.push({\n          xAdvance: advances[i],\n          yAdvance: 0,\n          xOffset: 0,\n          yOffset: 0,\n          advanceWidth: this.font.widthOfGlyph(glyph)\n        });\n      }\n      return [encoded, positions];\n    };\n\n    StandardFont.prototype.widthOfString = function(string, size) {\n      var advance, advances, glyphs, j, len, scale, width;\n      glyphs = this.font.glyphsForString('' + string);\n      advances = this.font.advancesForGlyphs(glyphs);\n      width = 0;\n      for (j = 0, len = advances.length; j < len; j++) {\n        advance = advances[j];\n        width += advance;\n      }\n      scale = size / 1000;\n      return width * scale;\n    };\n\n    StandardFont.isStandardFont = function(name) {\n      return name in STANDARD_FONTS;\n    };\n\n    STANDARD_FONTS = {\n      \"Courier\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier.afm\", 'utf8');\n      },\n      \"Courier-Bold\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier-Bold.afm\", 'utf8');\n      },\n      \"Courier-Oblique\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier-Oblique.afm\", 'utf8');\n      },\n      \"Courier-BoldOblique\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Courier-BoldOblique.afm\", 'utf8');\n      },\n      \"Helvetica\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica.afm\", 'utf8');\n      },\n      \"Helvetica-Bold\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica-Bold.afm\", 'utf8');\n      },\n      \"Helvetica-Oblique\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica-Oblique.afm\", 'utf8');\n      },\n      \"Helvetica-BoldOblique\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Helvetica-BoldOblique.afm\", 'utf8');\n      },\n      \"Times-Roman\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-Roman.afm\", 'utf8');\n      },\n      \"Times-Bold\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-Bold.afm\", 'utf8');\n      },\n      \"Times-Italic\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-Italic.afm\", 'utf8');\n      },\n      \"Times-BoldItalic\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Times-BoldItalic.afm\", 'utf8');\n      },\n      \"Symbol\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/Symbol.afm\", 'utf8');\n      },\n      \"ZapfDingbats\": function() {\n        return fs.readFileSync(__dirname + \"/../font/data/ZapfDingbats.afm\", 'utf8');\n      }\n    };\n\n    return StandardFont;\n\n  })(PDFFont);\n\n  module.exports = StandardFont;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/font/afm.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var AFMFont, fs;\n\n  fs = require('fs');\n\n  AFMFont = (function() {\n    var WIN_ANSI_MAP, characters;\n\n    AFMFont.open = function(filename) {\n      return new AFMFont(fs.readFileSync(filename, 'utf8'));\n    };\n\n    function AFMFont(contents) {\n      var e, i;\n      this.contents = contents;\n      this.attributes = {};\n      this.glyphWidths = {};\n      this.boundingBoxes = {};\n      this.kernPairs = {};\n      this.parse();\n      this.charWidths = (function() {\n        var j, results;\n        results = [];\n        for (i = j = 0; j <= 255; i = ++j) {\n          results.push(this.glyphWidths[characters[i]]);\n        }\n        return results;\n      }).call(this);\n      this.bbox = (function() {\n        var j, len, ref, results;\n        ref = this.attributes['FontBBox'].split(/\\s+/);\n        results = [];\n        for (j = 0, len = ref.length; j < len; j++) {\n          e = ref[j];\n          results.push(+e);\n        }\n        return results;\n      }).call(this);\n      this.ascender = +(this.attributes['Ascender'] || 0);\n      this.descender = +(this.attributes['Descender'] || 0);\n      this.lineGap = (this.bbox[3] - this.bbox[1]) - (this.ascender - this.descender);\n    }\n\n    AFMFont.prototype.parse = function() {\n      var a, j, key, len, line, match, name, ref, section, value;\n      section = '';\n      ref = this.contents.split('\\n');\n      for (j = 0, len = ref.length; j < len; j++) {\n        line = ref[j];\n        if (match = line.match(/^Start(\\w+)/)) {\n          section = match[1];\n          continue;\n        } else if (match = line.match(/^End(\\w+)/)) {\n          section = '';\n          continue;\n        }\n        switch (section) {\n          case 'FontMetrics':\n            match = line.match(/(^\\w+)\\s+(.*)/);\n            key = match[1];\n            value = match[2];\n            if (a = this.attributes[key]) {\n              if (!Array.isArray(a)) {\n                a = this.attributes[key] = [a];\n              }\n              a.push(value);\n            } else {\n              this.attributes[key] = value;\n            }\n            break;\n          case 'CharMetrics':\n            if (!/^CH?\\s/.test(line)) {\n              continue;\n            }\n            name = line.match(/\\bN\\s+(\\.?\\w+)\\s*;/)[1];\n            this.glyphWidths[name] = +line.match(/\\bWX\\s+(\\d+)\\s*;/)[1];\n            break;\n          case 'KernPairs':\n            match = line.match(/^KPX\\s+(\\.?\\w+)\\s+(\\.?\\w+)\\s+(-?\\d+)/);\n            if (match) {\n              this.kernPairs[match[1] + '\\0' + match[2]] = parseInt(match[3]);\n            }\n        }\n      }\n    };\n\n    WIN_ANSI_MAP = {\n      402: 131,\n      8211: 150,\n      8212: 151,\n      8216: 145,\n      8217: 146,\n      8218: 130,\n      8220: 147,\n      8221: 148,\n      8222: 132,\n      8224: 134,\n      8225: 135,\n      8226: 149,\n      8230: 133,\n      8364: 128,\n      8240: 137,\n      8249: 139,\n      8250: 155,\n      710: 136,\n      8482: 153,\n      338: 140,\n      339: 156,\n      732: 152,\n      352: 138,\n      353: 154,\n      376: 159,\n      381: 142,\n      382: 158\n    };\n\n    AFMFont.prototype.encodeText = function(text) {\n      var char, i, j, ref, res;\n      res = [];\n      for (i = j = 0, ref = text.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        char = text.charCodeAt(i);\n        char = WIN_ANSI_MAP[char] || char;\n        res.push(char.toString(16));\n      }\n      return res;\n    };\n\n    AFMFont.prototype.glyphsForString = function(string) {\n      var charCode, glyphs, i, j, ref;\n      glyphs = [];\n      for (i = j = 0, ref = string.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        charCode = string.charCodeAt(i);\n        glyphs.push(this.characterToGlyph(charCode));\n      }\n      return glyphs;\n    };\n\n    AFMFont.prototype.characterToGlyph = function(character) {\n      return characters[WIN_ANSI_MAP[character] || character] || '.notdef';\n    };\n\n    AFMFont.prototype.widthOfGlyph = function(glyph) {\n      return this.glyphWidths[glyph] || 0;\n    };\n\n    AFMFont.prototype.getKernPair = function(left, right) {\n      return this.kernPairs[left + '\\0' + right] || 0;\n    };\n\n    AFMFont.prototype.advancesForGlyphs = function(glyphs) {\n      var advances, index, j, left, len, right;\n      advances = [];\n      for (index = j = 0, len = glyphs.length; j < len; index = ++j) {\n        left = glyphs[index];\n        right = glyphs[index + 1];\n        advances.push(this.widthOfGlyph(left) + this.getKernPair(left, right));\n      }\n      return advances;\n    };\n\n    characters = '.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n\\nspace         exclam         quotedbl       numbersign\\ndollar        percent        ampersand      quotesingle\\nparenleft     parenright     asterisk       plus\\ncomma         hyphen         period         slash\\nzero          one            two            three\\nfour          five           six            seven\\neight         nine           colon          semicolon\\nless          equal          greater        question\\n\\nat            A              B              C\\nD             E              F              G\\nH             I              J              K\\nL             M              N              O\\nP             Q              R              S\\nT             U              V              W\\nX             Y              Z              bracketleft\\nbackslash     bracketright   asciicircum    underscore\\n\\ngrave         a              b              c\\nd             e              f              g\\nh             i              j              k\\nl             m              n              o\\np             q              r              s\\nt             u              v              w\\nx             y              z              braceleft\\nbar           braceright     asciitilde     .notdef\\n\\nEuro          .notdef        quotesinglbase florin\\nquotedblbase  ellipsis       dagger         daggerdbl\\ncircumflex    perthousand    Scaron         guilsinglleft\\nOE            .notdef        Zcaron         .notdef\\n.notdef       quoteleft      quoteright     quotedblleft\\nquotedblright bullet         endash         emdash\\ntilde         trademark      scaron         guilsinglright\\noe            .notdef        zcaron         ydieresis\\n\\nspace         exclamdown     cent           sterling\\ncurrency      yen            brokenbar      section\\ndieresis      copyright      ordfeminine    guillemotleft\\nlogicalnot    hyphen         registered     macron\\ndegree        plusminus      twosuperior    threesuperior\\nacute         mu             paragraph      periodcentered\\ncedilla       onesuperior    ordmasculine   guillemotright\\nonequarter    onehalf        threequarters  questiondown\\n\\nAgrave        Aacute         Acircumflex    Atilde\\nAdieresis     Aring          AE             Ccedilla\\nEgrave        Eacute         Ecircumflex    Edieresis\\nIgrave        Iacute         Icircumflex    Idieresis\\nEth           Ntilde         Ograve         Oacute\\nOcircumflex   Otilde         Odieresis      multiply\\nOslash        Ugrave         Uacute         Ucircumflex\\nUdieresis     Yacute         Thorn          germandbls\\n\\nagrave        aacute         acircumflex    atilde\\nadieresis     aring          ae             ccedilla\\negrave        eacute         ecircumflex    edieresis\\nigrave        iacute         icircumflex    idieresis\\neth           ntilde         ograve         oacute\\nocircumflex   otilde         odieresis      divide\\noslash        ugrave         uacute         ucircumflex\\nudieresis     yacute         thorn          ydieresis'.split(/\\s+/);\n\n    return AFMFont;\n\n  })();\n\n  module.exports = AFMFont;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/font/embedded.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var EmbeddedFont, PDFFont, PDFObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    slice = [].slice;\n\n  PDFFont = require('../font');\n\n  PDFObject = require('../object');\n\n  EmbeddedFont = (function(superClass) {\n    var toHex;\n\n    extend(EmbeddedFont, superClass);\n\n    function EmbeddedFont(document, font, id) {\n      this.document = document;\n      this.font = font;\n      this.id = id;\n      this.subset = this.font.createSubset();\n      this.unicode = [[0]];\n      this.widths = [this.font.getGlyph(0).advanceWidth];\n      this.name = this.font.postscriptName;\n      this.scale = 1000 / this.font.unitsPerEm;\n      this.ascender = this.font.ascent * this.scale;\n      this.descender = this.font.descent * this.scale;\n      this.lineGap = this.font.lineGap * this.scale;\n      this.bbox = this.font.bbox;\n    }\n\n    EmbeddedFont.prototype.encode = function(text, features) {\n      var base, base1, gid, glyph, glyphs, i, j, key, len, positions, ref, res;\n      ref = this.font.layout(text, features), glyphs = ref.glyphs, positions = ref.positions;\n      res = [];\n      for (i = j = 0, len = glyphs.length; j < len; i = ++j) {\n        glyph = glyphs[i];\n        gid = this.subset.includeGlyph(glyph.id);\n        res.push(('0000' + gid.toString(16)).slice(-4));\n        if ((base = this.widths)[gid] == null) {\n          base[gid] = glyph.advanceWidth * this.scale;\n        }\n        if ((base1 = this.unicode)[gid] == null) {\n          base1[gid] = glyph.codePoints;\n        }\n        for (key in positions[i]) {\n          positions[i][key] *= this.scale;\n        }\n        positions[i].advanceWidth = glyph.advanceWidth * this.scale;\n      }\n      return [res, positions];\n    };\n\n    EmbeddedFont.prototype.widthOfString = function(string, size, features) {\n      var scale, width;\n      width = this.font.layout(string, features).advanceWidth;\n      scale = size / this.font.unitsPerEm;\n      return width * scale;\n    };\n\n    EmbeddedFont.prototype.embed = function() {\n      var bbox, descendantFont, descriptor, familyClass, flags, fontFile, i, isCFF, name, ref, tag;\n      isCFF = this.subset.cff != null;\n      fontFile = this.document.ref();\n      if (isCFF) {\n        fontFile.data.Subtype = 'CIDFontType0C';\n      }\n      this.subset.encodeStream().pipe(fontFile);\n      familyClass = (((ref = this.font['OS/2']) != null ? ref.sFamilyClass : void 0) || 0) >> 8;\n      flags = 0;\n      if (this.font.post.isFixedPitch) {\n        flags |= 1 << 0;\n      }\n      if ((1 <= familyClass && familyClass <= 7)) {\n        flags |= 1 << 1;\n      }\n      flags |= 1 << 2;\n      if (familyClass === 10) {\n        flags |= 1 << 3;\n      }\n      if (this.font.head.macStyle.italic) {\n        flags |= 1 << 6;\n      }\n      tag = ((function() {\n        var j, results;\n        results = [];\n        for (i = j = 0; j < 6; i = ++j) {\n          results.push(String.fromCharCode(Math.random() * 26 + 65));\n        }\n        return results;\n      })()).join('');\n      name = tag + '+' + this.font.postscriptName;\n      bbox = this.font.bbox;\n      descriptor = this.document.ref({\n        Type: 'FontDescriptor',\n        FontName: name,\n        Flags: flags,\n        FontBBox: [bbox.minX * this.scale, bbox.minY * this.scale, bbox.maxX * this.scale, bbox.maxY * this.scale],\n        ItalicAngle: this.font.italicAngle,\n        Ascent: this.ascender,\n        Descent: this.descender,\n        CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,\n        XHeight: (this.font.xHeight || 0) * this.scale,\n        StemV: 0\n      });\n      if (isCFF) {\n        descriptor.data.FontFile3 = fontFile;\n      } else {\n        descriptor.data.FontFile2 = fontFile;\n      }\n      descriptor.end();\n      descendantFont = this.document.ref({\n        Type: 'Font',\n        Subtype: isCFF ? 'CIDFontType0' : 'CIDFontType2',\n        BaseFont: name,\n        CIDSystemInfo: {\n          Registry: new String('Adobe'),\n          Ordering: new String('Identity'),\n          Supplement: 0\n        },\n        FontDescriptor: descriptor,\n        W: [0, this.widths]\n      });\n      descendantFont.end();\n      this.dictionary.data = {\n        Type: 'Font',\n        Subtype: 'Type0',\n        BaseFont: name,\n        Encoding: 'Identity-H',\n        DescendantFonts: [descendantFont],\n        ToUnicode: this.toUnicodeCmap()\n      };\n      return this.dictionary.end();\n    };\n\n    toHex = function() {\n      var code, codePoints, codes;\n      codePoints = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      codes = (function() {\n        var j, len, results;\n        results = [];\n        for (j = 0, len = codePoints.length; j < len; j++) {\n          code = codePoints[j];\n          results.push(('0000' + code.toString(16)).slice(-4));\n        }\n        return results;\n      })();\n      return codes.join('');\n    };\n\n    EmbeddedFont.prototype.toUnicodeCmap = function() {\n      var cmap, codePoints, encoded, entries, j, k, len, len1, ref, value;\n      cmap = this.document.ref();\n      entries = [];\n      ref = this.unicode;\n      for (j = 0, len = ref.length; j < len; j++) {\n        codePoints = ref[j];\n        encoded = [];\n        for (k = 0, len1 = codePoints.length; k < len1; k++) {\n          value = codePoints[k];\n          if (value > 0xffff) {\n            value -= 0x10000;\n            encoded.push(toHex(value >>> 10 & 0x3ff | 0xd800));\n            value = 0xdc00 | value & 0x3ff;\n          }\n          encoded.push(toHex(value));\n        }\n        entries.push(\"<\" + (encoded.join(' ')) + \">\");\n      }\n      cmap.end(\"/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo <<\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement 0\\n>> def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange\\n<0000><ffff>\\nendcodespacerange\\n1 beginbfrange\\n<0000> <\" + (toHex(entries.length - 1)) + \"> [\" + (entries.join(' ')) + \"]\\nendbfrange\\nendcmap\\nCMapName currentdict /CMap defineresource pop\\nend\\nend\");\n      return cmap;\n    };\n\n    return EmbeddedFont;\n\n  })(PDFFont);\n\n  module.exports = EmbeddedFont;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/mixins/text.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var LineWrapper;\n\n  LineWrapper = require('../line_wrapper');\n\n  module.exports = {\n    initText: function() {\n      this.x = 0;\n      this.y = 0;\n      return this._lineGap = 0;\n    },\n    lineGap: function(_lineGap) {\n      this._lineGap = _lineGap;\n      return this;\n    },\n    moveDown: function(lines) {\n      if (lines == null) {\n        lines = 1;\n      }\n      this.y += this.currentLineHeight(true) * lines + this._lineGap;\n      return this;\n    },\n    moveUp: function(lines) {\n      if (lines == null) {\n        lines = 1;\n      }\n      this.y -= this.currentLineHeight(true) * lines + this._lineGap;\n      return this;\n    },\n    _text: function(text, x, y, options, lineCallback) {\n      var j, len, line, ref, wrapper;\n      options = this._initOptions(x, y, options);\n      text = '' + text;\n      if (options.wordSpacing) {\n        text = text.replace(/\\s{2,}/g, ' ');\n      }\n      if (options.width) {\n        wrapper = this._wrapper;\n        if (!wrapper) {\n          wrapper = new LineWrapper(this, options);\n          wrapper.on('line', lineCallback);\n        }\n        this._wrapper = options.continued ? wrapper : null;\n        this._textOptions = options.continued ? options : null;\n        wrapper.wrap(text, options);\n      } else {\n        ref = text.split('\\n');\n        for (j = 0, len = ref.length; j < len; j++) {\n          line = ref[j];\n          lineCallback(line, options);\n        }\n      }\n      return this;\n    },\n    text: function(text, x, y, options) {\n      return this._text(text, x, y, options, this._line.bind(this));\n    },\n    widthOfString: function(string, options) {\n      if (options == null) {\n        options = {};\n      }\n      return this._font.widthOfString(string, this._fontSize, options.features) + (options.characterSpacing || 0) * (string.length - 1);\n    },\n    heightOfString: function(text, options) {\n      var height, lineGap, x, y;\n      if (options == null) {\n        options = {};\n      }\n      x = this.x, y = this.y;\n      options = this._initOptions(options);\n      options.height = Infinity;\n      lineGap = options.lineGap || this._lineGap || 0;\n      this._text(text, this.x, this.y, options, (function(_this) {\n        return function(line, options) {\n          return _this.y += _this.currentLineHeight(true) + lineGap;\n        };\n      })(this));\n      height = this.y - y;\n      this.x = x;\n      this.y = y;\n      return height;\n    },\n    list: function(list, x, y, options, wrapper) {\n      var flatten, i, indent, itemIndent, items, level, levels, r;\n      options = this._initOptions(x, y, options);\n      r = Math.round((this._font.ascender / 1000 * this._fontSize) / 3);\n      indent = options.textIndent || r * 5;\n      itemIndent = options.bulletIndent || r * 8;\n      level = 1;\n      items = [];\n      levels = [];\n      flatten = function(list) {\n        var i, item, j, len, results;\n        results = [];\n        for (i = j = 0, len = list.length; j < len; i = ++j) {\n          item = list[i];\n          if (Array.isArray(item)) {\n            level++;\n            flatten(item);\n            results.push(level--);\n          } else {\n            items.push(item);\n            results.push(levels.push(level));\n          }\n        }\n        return results;\n      };\n      flatten(list);\n      wrapper = new LineWrapper(this, options);\n      wrapper.on('line', this._line.bind(this));\n      level = 1;\n      i = 0;\n      wrapper.on('firstLine', (function(_this) {\n        return function() {\n          var diff, l;\n          if ((l = levels[i++]) !== level) {\n            diff = itemIndent * (l - level);\n            _this.x += diff;\n            wrapper.lineWidth -= diff;\n            level = l;\n          }\n          _this.circle(_this.x - indent + r, _this.y + r + (r / 2), r);\n          return _this.fill();\n        };\n      })(this));\n      wrapper.on('sectionStart', (function(_this) {\n        return function() {\n          var pos;\n          pos = indent + itemIndent * (level - 1);\n          _this.x += pos;\n          return wrapper.lineWidth -= pos;\n        };\n      })(this));\n      wrapper.on('sectionEnd', (function(_this) {\n        return function() {\n          var pos;\n          pos = indent + itemIndent * (level - 1);\n          _this.x -= pos;\n          return wrapper.lineWidth += pos;\n        };\n      })(this));\n      wrapper.wrap(items.join('\\n'), options);\n      return this;\n    },\n    _initOptions: function(x, y, options) {\n      var key, margins, ref, val;\n      if (x == null) {\n        x = {};\n      }\n      if (options == null) {\n        options = {};\n      }\n      if (typeof x === 'object') {\n        options = x;\n        x = null;\n      }\n      options = (function() {\n        var k, opts, v;\n        opts = {};\n        for (k in options) {\n          v = options[k];\n          opts[k] = v;\n        }\n        return opts;\n      })();\n      if (this._textOptions) {\n        ref = this._textOptions;\n        for (key in ref) {\n          val = ref[key];\n          if (key !== 'continued') {\n            if (options[key] == null) {\n              options[key] = val;\n            }\n          }\n        }\n      }\n      if (x != null) {\n        this.x = x;\n      }\n      if (y != null) {\n        this.y = y;\n      }\n      if (options.lineBreak !== false) {\n        margins = this.page.margins;\n        if (options.width == null) {\n          options.width = this.page.width - this.x - margins.right;\n        }\n      }\n      options.columns || (options.columns = 0);\n      if (options.columnGap == null) {\n        options.columnGap = 18;\n      }\n      return options;\n    },\n    _line: function(text, options, wrapper) {\n      var lineGap;\n      if (options == null) {\n        options = {};\n      }\n      this._fragment(text, this.x, this.y, options);\n      lineGap = options.lineGap || this._lineGap || 0;\n      if (!wrapper) {\n        return this.x += this.widthOfString(text);\n      } else {\n        return this.y += this.currentLineHeight(true) + lineGap;\n      }\n    },\n    _fragment: function(text, x, y, options) {\n      var addSegment, align, base, characterSpacing, commands, d, encoded, encodedWord, flush, hadOffset, i, j, last, len, len1, lineWidth, lineY, m, mode, name, pos, positions, positionsWord, ref, ref1, renderedWidth, scale, spaceWidth, textWidth, word, wordSpacing, words;\n      text = ('' + text).replace(/\\n/g, '');\n      if (text.length === 0) {\n        return;\n      }\n      align = options.align || 'left';\n      wordSpacing = options.wordSpacing || 0;\n      characterSpacing = options.characterSpacing || 0;\n      if (options.width) {\n        switch (align) {\n          case 'right':\n            textWidth = this.widthOfString(text.replace(/\\s+$/, ''), options);\n            x += options.lineWidth - textWidth;\n            break;\n          case 'center':\n            x += options.lineWidth / 2 - options.textWidth / 2;\n            break;\n          case 'justify':\n            words = text.trim().split(/\\s+/);\n            textWidth = this.widthOfString(text.replace(/\\s+/g, ''), options);\n            spaceWidth = this.widthOfString(' ') + characterSpacing;\n            wordSpacing = Math.max(0, (options.lineWidth - textWidth) / Math.max(1, words.length - 1) - spaceWidth);\n        }\n      }\n      renderedWidth = options.textWidth + (wordSpacing * (options.wordCount - 1)) + (characterSpacing * (text.length - 1));\n      if (options.link) {\n        this.link(x, y, renderedWidth, this.currentLineHeight(), options.link);\n      }\n      if (options.underline || options.strike) {\n        this.save();\n        if (!options.stroke) {\n          this.strokeColor.apply(this, this._fillColor);\n        }\n        lineWidth = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);\n        this.lineWidth(lineWidth);\n        d = options.underline ? 1 : 2;\n        lineY = y + this.currentLineHeight() / d;\n        if (options.underline) {\n          lineY -= lineWidth;\n        }\n        this.moveTo(x, lineY);\n        this.lineTo(x + renderedWidth, lineY);\n        this.stroke();\n        this.restore();\n      }\n      this.save();\n      this.transform(1, 0, 0, -1, 0, this.page.height);\n      y = this.page.height - y - (this._font.ascender / 1000 * this._fontSize);\n      if ((base = this.page.fonts)[name = this._font.id] == null) {\n        base[name] = this._font.ref();\n      }\n      this.addContent(\"BT\");\n      this.addContent(\"1 0 0 1 \" + x + \" \" + y + \" Tm\");\n      this.addContent(\"/\" + this._font.id + \" \" + this._fontSize + \" Tf\");\n      mode = options.fill && options.stroke ? 2 : options.stroke ? 1 : 0;\n      if (mode) {\n        this.addContent(mode + \" Tr\");\n      }\n      if (characterSpacing) {\n        this.addContent(characterSpacing + \" Tc\");\n      }\n      if (wordSpacing) {\n        words = text.trim().split(/\\s+/);\n        wordSpacing += this.widthOfString(' ') + characterSpacing;\n        wordSpacing *= 1000 / this._fontSize;\n        encoded = [];\n        positions = [];\n        for (j = 0, len = words.length; j < len; j++) {\n          word = words[j];\n          ref = this._font.encode(word, options.features), encodedWord = ref[0], positionsWord = ref[1];\n          encoded.push.apply(encoded, encodedWord);\n          positions.push.apply(positions, positionsWord);\n          positions[positions.length - 1].xAdvance += wordSpacing;\n        }\n      } else {\n        ref1 = this._font.encode(text, options.features), encoded = ref1[0], positions = ref1[1];\n      }\n      scale = this._fontSize / 1000;\n      commands = [];\n      last = 0;\n      hadOffset = false;\n      addSegment = (function(_this) {\n        return function(cur) {\n          var advance, hex;\n          if (last < cur) {\n            hex = encoded.slice(last, cur).join('');\n            advance = positions[cur - 1].xAdvance - positions[cur - 1].advanceWidth;\n            commands.push(\"<\" + hex + \"> \" + (-advance));\n          }\n          return last = cur;\n        };\n      })(this);\n      flush = (function(_this) {\n        return function(i) {\n          addSegment(i);\n          if (commands.length > 0) {\n            _this.addContent(\"[\" + (commands.join(' ')) + \"] TJ\");\n            return commands.length = 0;\n          }\n        };\n      })(this);\n      for (i = m = 0, len1 = positions.length; m < len1; i = ++m) {\n        pos = positions[i];\n        if (pos.xOffset || pos.yOffset) {\n          flush(i);\n          this.addContent(\"1 0 0 1 \" + (x + pos.xOffset * scale) + \" \" + (y + pos.yOffset * scale) + \" Tm\");\n          flush(i + 1);\n          hadOffset = true;\n        } else {\n          if (hadOffset) {\n            this.addContent(\"1 0 0 1 \" + x + \" \" + y + \" Tm\");\n            hadOffset = false;\n          }\n          if (pos.xAdvance - pos.advanceWidth !== 0) {\n            addSegment(i + 1);\n          }\n        }\n        x += pos.xAdvance * scale;\n      }\n      flush(i);\n      this.addContent(\"ET\");\n      return this.restore();\n    }\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/line_wrapper.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var EventEmitter, LineBreaker, LineWrapper,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  EventEmitter = require('events').EventEmitter;\n\n  LineBreaker = require('linebreak');\n\n  LineWrapper = (function(superClass) {\n    extend(LineWrapper, superClass);\n\n    function LineWrapper(document, options) {\n      var ref;\n      this.document = document;\n      this.indent = options.indent || 0;\n      this.characterSpacing = options.characterSpacing || 0;\n      this.wordSpacing = options.wordSpacing === 0;\n      this.columns = options.columns || 1;\n      this.columnGap = (ref = options.columnGap) != null ? ref : 18;\n      this.lineWidth = (options.width - (this.columnGap * (this.columns - 1))) / this.columns;\n      this.spaceLeft = this.lineWidth;\n      this.startX = this.document.x;\n      this.startY = this.document.y;\n      this.column = 1;\n      this.ellipsis = options.ellipsis;\n      this.continuedX = 0;\n      this.features = options.features;\n      if (options.height != null) {\n        this.height = options.height;\n        this.maxY = this.startY + options.height;\n      } else {\n        this.maxY = this.document.page.maxY();\n      }\n      this.on('firstLine', (function(_this) {\n        return function(options) {\n          var indent;\n          indent = _this.continuedX || _this.indent;\n          _this.document.x += indent;\n          _this.lineWidth -= indent;\n          return _this.once('line', function() {\n            _this.document.x -= indent;\n            _this.lineWidth += indent;\n            if (options.continued && !_this.continuedX) {\n              _this.continuedX = _this.indent;\n            }\n            if (!options.continued) {\n              return _this.continuedX = 0;\n            }\n          });\n        };\n      })(this));\n      this.on('lastLine', (function(_this) {\n        return function(options) {\n          var align;\n          align = options.align;\n          if (align === 'justify') {\n            options.align = 'left';\n          }\n          _this.lastLine = true;\n          return _this.once('line', function() {\n            _this.document.y += options.paragraphGap || 0;\n            options.align = align;\n            return _this.lastLine = false;\n          });\n        };\n      })(this));\n    }\n\n    LineWrapper.prototype.wordWidth = function(word) {\n      return this.document.widthOfString(word, this) + this.characterSpacing + this.wordSpacing;\n    };\n\n    LineWrapper.prototype.eachWord = function(text, fn) {\n      var bk, breaker, fbk, l, last, lbk, shouldContinue, w, word, wordWidths;\n      breaker = new LineBreaker(text);\n      last = null;\n      wordWidths = Object.create(null);\n      while (bk = breaker.nextBreak()) {\n        word = text.slice((last != null ? last.position : void 0) || 0, bk.position);\n        w = wordWidths[word] != null ? wordWidths[word] : wordWidths[word] = this.wordWidth(word);\n        if (w > this.lineWidth + this.continuedX) {\n          lbk = last;\n          fbk = {};\n          while (word.length) {\n            l = word.length;\n            while (w > this.spaceLeft) {\n              w = this.wordWidth(word.slice(0, --l));\n            }\n            fbk.required = l < word.length;\n            shouldContinue = fn(word.slice(0, l), w, fbk, lbk);\n            lbk = {\n              required: false\n            };\n            word = word.slice(l);\n            w = this.wordWidth(word);\n            if (shouldContinue === false) {\n              break;\n            }\n          }\n        } else {\n          shouldContinue = fn(word, w, bk, last);\n        }\n        if (shouldContinue === false) {\n          break;\n        }\n        last = bk;\n      }\n    };\n\n    LineWrapper.prototype.wrap = function(text, options) {\n      var buffer, emitLine, lc, nextY, textWidth, wc, y;\n      if (options.indent != null) {\n        this.indent = options.indent;\n      }\n      if (options.characterSpacing != null) {\n        this.characterSpacing = options.characterSpacing;\n      }\n      if (options.wordSpacing != null) {\n        this.wordSpacing = options.wordSpacing;\n      }\n      if (options.ellipsis != null) {\n        this.ellipsis = options.ellipsis;\n      }\n      nextY = this.document.y + this.document.currentLineHeight(true);\n      if (this.document.y > this.maxY || nextY > this.maxY) {\n        this.nextSection();\n      }\n      buffer = '';\n      textWidth = 0;\n      wc = 0;\n      lc = 0;\n      y = this.document.y;\n      emitLine = (function(_this) {\n        return function() {\n          options.textWidth = textWidth + _this.wordSpacing * (wc - 1);\n          options.wordCount = wc;\n          options.lineWidth = _this.lineWidth;\n          y = _this.document.y;\n          _this.emit('line', buffer, options, _this);\n          return lc++;\n        };\n      })(this);\n      this.emit('sectionStart', options, this);\n      this.eachWord(text, (function(_this) {\n        return function(word, w, bk, last) {\n          var lh, shouldContinue;\n          if ((last == null) || last.required) {\n            _this.emit('firstLine', options, _this);\n            _this.spaceLeft = _this.lineWidth;\n          }\n          if (w <= _this.spaceLeft) {\n            buffer += word;\n            textWidth += w;\n            wc++;\n          }\n          if (bk.required || w > _this.spaceLeft) {\n            if (bk.required) {\n              _this.emit('lastLine', options, _this);\n            }\n            lh = _this.document.currentLineHeight(true);\n            if ((_this.height != null) && _this.ellipsis && _this.document.y + lh * 2 > _this.maxY && _this.column >= _this.columns) {\n              if (_this.ellipsis === true) {\n                _this.ellipsis = '…';\n              }\n              buffer = buffer.replace(/\\s+$/, '');\n              textWidth = _this.wordWidth(buffer + _this.ellipsis);\n              while (textWidth > _this.lineWidth) {\n                buffer = buffer.slice(0, -1).replace(/\\s+$/, '');\n                textWidth = _this.wordWidth(buffer + _this.ellipsis);\n              }\n              buffer = buffer + _this.ellipsis;\n            }\n            emitLine();\n            if (_this.document.y + lh > _this.maxY) {\n              shouldContinue = _this.nextSection();\n              if (!shouldContinue) {\n                wc = 0;\n                buffer = '';\n                return false;\n              }\n            }\n            if (bk.required) {\n              if (w > _this.spaceLeft) {\n                buffer = word;\n                textWidth = w;\n                wc = 1;\n                emitLine();\n              }\n              _this.spaceLeft = _this.lineWidth;\n              buffer = '';\n              textWidth = 0;\n              return wc = 0;\n            } else {\n              _this.spaceLeft = _this.lineWidth - w;\n              buffer = word;\n              textWidth = w;\n              return wc = 1;\n            }\n          } else {\n            return _this.spaceLeft -= w;\n          }\n        };\n      })(this));\n      if (wc > 0) {\n        this.emit('lastLine', options, this);\n        emitLine();\n      }\n      this.emit('sectionEnd', options, this);\n      if (options.continued === true) {\n        if (lc > 1) {\n          this.continuedX = 0;\n        }\n        this.continuedX += options.textWidth;\n        return this.document.y = y;\n      } else {\n        return this.document.x = this.startX;\n      }\n    };\n\n    LineWrapper.prototype.nextSection = function(options) {\n      var ref;\n      this.emit('sectionEnd', options, this);\n      if (++this.column > this.columns) {\n        if (this.height != null) {\n          return false;\n        }\n        this.document.addPage();\n        this.column = 1;\n        this.startY = this.document.page.margins.top;\n        this.maxY = this.document.page.maxY();\n        this.document.x = this.startX;\n        if (this.document._fillColor) {\n          (ref = this.document).fillColor.apply(ref, this.document._fillColor);\n        }\n        this.emit('pageBreak', options, this);\n      } else {\n        this.document.x += this.lineWidth + this.columnGap;\n        this.document.y = this.startY;\n        this.emit('columnBreak', options, this);\n      }\n      this.emit('sectionStart', options, this);\n      return true;\n    };\n\n    return LineWrapper;\n\n  })(EventEmitter);\n\n  module.exports = LineWrapper;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/mixins/images.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var PDFImage;\n\n  PDFImage = require('../image');\n\n  module.exports = {\n    initImages: function() {\n      this._imageRegistry = {};\n      return this._imageCount = 0;\n    },\n    image: function(src, x, y, options) {\n      var base, bh, bp, bw, h, hp, image, ip, name, ref, ref1, ref2, w, wp;\n      if (options == null) {\n        options = {};\n      }\n      if (typeof x === 'object') {\n        options = x;\n        x = null;\n      }\n      x = (ref = x != null ? x : options.x) != null ? ref : this.x;\n      y = (ref1 = y != null ? y : options.y) != null ? ref1 : this.y;\n      if (!Buffer.isBuffer(src)) {\n        image = this._imageRegistry[src];\n      }\n      if (!image) {\n        image = PDFImage.open(src, 'I' + (++this._imageCount));\n        image.embed(this);\n        if (!Buffer.isBuffer(src)) {\n          this._imageRegistry[src] = image;\n        }\n      }\n      if ((base = this.page.xobjects)[name = image.label] == null) {\n        base[name] = image.obj;\n      }\n      w = options.width || image.width;\n      h = options.height || image.height;\n      if (options.width && !options.height) {\n        wp = w / image.width;\n        w = image.width * wp;\n        h = image.height * wp;\n      } else if (options.height && !options.width) {\n        hp = h / image.height;\n        w = image.width * hp;\n        h = image.height * hp;\n      } else if (options.scale) {\n        w = image.width * options.scale;\n        h = image.height * options.scale;\n      } else if (options.fit) {\n        ref2 = options.fit, bw = ref2[0], bh = ref2[1];\n        bp = bw / bh;\n        ip = image.width / image.height;\n        if (ip > bp) {\n          w = bw;\n          h = bw / ip;\n        } else {\n          h = bh;\n          w = bh * ip;\n        }\n        if (options.align === 'center') {\n          x = x + bw / 2 - w / 2;\n        } else if (options.align === 'right') {\n          x = x + bw - w;\n        }\n        if (options.valign === 'center') {\n          y = y + bh / 2 - h / 2;\n        } else if (options.valign === 'bottom') {\n          y = y + bh - h;\n        }\n      }\n      if (this.y === y) {\n        this.y += h;\n      }\n      this.save();\n      this.transform(w, 0, 0, -h, x, y + h);\n      this.addContent(\"/\" + image.label + \" Do\");\n      this.restore();\n      return this;\n    }\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/image.js":"// Generated by CoffeeScript 1.10.0\n\n/*\nPDFImage - embeds images in PDF documents\nBy Devon Govett\n */\n\n(function() {\n  var Data, JPEG, PDFImage, PNG, fs;\n\n  fs = require('fs');\n\n  Data = require('./data');\n\n  JPEG = require('./image/jpeg');\n\n  PNG = require('./image/png');\n\n  PDFImage = (function() {\n    function PDFImage() {}\n\n    PDFImage.open = function(src, label) {\n      var data, match;\n      if (Buffer.isBuffer(src)) {\n        data = src;\n      } else if (src instanceof ArrayBuffer) {\n        data = new Buffer(new Uint8Array(src));\n      } else {\n        if (match = /^data:.+;base64,(.*)$/.exec(src)) {\n          data = new Buffer(match[1], 'base64');\n        } else {\n          data = fs.readFileSync(src);\n          if (!data) {\n            return;\n          }\n        }\n      }\n      if (data[0] === 0xff && data[1] === 0xd8) {\n        return new JPEG(data, label);\n      } else if (data[0] === 0x89 && data.toString('ascii', 1, 4) === 'PNG') {\n        return new PNG(data, label);\n      } else {\n        throw new Error('Unknown image format.');\n      }\n    };\n\n    return PDFImage;\n\n  })();\n\n  module.exports = PDFImage;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/data.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var Data;\n\n  Data = (function() {\n    function Data(data) {\n      this.data = data != null ? data : [];\n      this.pos = 0;\n      this.length = this.data.length;\n    }\n\n    Data.prototype.readByte = function() {\n      return this.data[this.pos++];\n    };\n\n    Data.prototype.writeByte = function(byte) {\n      return this.data[this.pos++] = byte;\n    };\n\n    Data.prototype.byteAt = function(index) {\n      return this.data[index];\n    };\n\n    Data.prototype.readBool = function() {\n      return !!this.readByte();\n    };\n\n    Data.prototype.writeBool = function(val) {\n      return this.writeByte(val ? 1 : 0);\n    };\n\n    Data.prototype.readUInt32 = function() {\n      var b1, b2, b3, b4;\n      b1 = this.readByte() * 0x1000000;\n      b2 = this.readByte() << 16;\n      b3 = this.readByte() << 8;\n      b4 = this.readByte();\n      return b1 + b2 + b3 + b4;\n    };\n\n    Data.prototype.writeUInt32 = function(val) {\n      this.writeByte((val >>> 24) & 0xff);\n      this.writeByte((val >> 16) & 0xff);\n      this.writeByte((val >> 8) & 0xff);\n      return this.writeByte(val & 0xff);\n    };\n\n    Data.prototype.readInt32 = function() {\n      var int;\n      int = this.readUInt32();\n      if (int >= 0x80000000) {\n        return int - 0x100000000;\n      } else {\n        return int;\n      }\n    };\n\n    Data.prototype.writeInt32 = function(val) {\n      if (val < 0) {\n        val += 0x100000000;\n      }\n      return this.writeUInt32(val);\n    };\n\n    Data.prototype.readUInt16 = function() {\n      var b1, b2;\n      b1 = this.readByte() << 8;\n      b2 = this.readByte();\n      return b1 | b2;\n    };\n\n    Data.prototype.writeUInt16 = function(val) {\n      this.writeByte((val >> 8) & 0xff);\n      return this.writeByte(val & 0xff);\n    };\n\n    Data.prototype.readInt16 = function() {\n      var int;\n      int = this.readUInt16();\n      if (int >= 0x8000) {\n        return int - 0x10000;\n      } else {\n        return int;\n      }\n    };\n\n    Data.prototype.writeInt16 = function(val) {\n      if (val < 0) {\n        val += 0x10000;\n      }\n      return this.writeUInt16(val);\n    };\n\n    Data.prototype.readString = function(length) {\n      var i, j, ref, ret;\n      ret = [];\n      for (i = j = 0, ref = length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        ret[i] = String.fromCharCode(this.readByte());\n      }\n      return ret.join('');\n    };\n\n    Data.prototype.writeString = function(val) {\n      var i, j, ref, results;\n      results = [];\n      for (i = j = 0, ref = val.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        results.push(this.writeByte(val.charCodeAt(i)));\n      }\n      return results;\n    };\n\n    Data.prototype.stringAt = function(pos, length) {\n      this.pos = pos;\n      return this.readString(length);\n    };\n\n    Data.prototype.readShort = function() {\n      return this.readInt16();\n    };\n\n    Data.prototype.writeShort = function(val) {\n      return this.writeInt16(val);\n    };\n\n    Data.prototype.readLongLong = function() {\n      var b1, b2, b3, b4, b5, b6, b7, b8;\n      b1 = this.readByte();\n      b2 = this.readByte();\n      b3 = this.readByte();\n      b4 = this.readByte();\n      b5 = this.readByte();\n      b6 = this.readByte();\n      b7 = this.readByte();\n      b8 = this.readByte();\n      if (b1 & 0x80) {\n        return ((b1 ^ 0xff) * 0x100000000000000 + (b2 ^ 0xff) * 0x1000000000000 + (b3 ^ 0xff) * 0x10000000000 + (b4 ^ 0xff) * 0x100000000 + (b5 ^ 0xff) * 0x1000000 + (b6 ^ 0xff) * 0x10000 + (b7 ^ 0xff) * 0x100 + (b8 ^ 0xff) + 1) * -1;\n      }\n      return b1 * 0x100000000000000 + b2 * 0x1000000000000 + b3 * 0x10000000000 + b4 * 0x100000000 + b5 * 0x1000000 + b6 * 0x10000 + b7 * 0x100 + b8;\n    };\n\n    Data.prototype.writeLongLong = function(val) {\n      var high, low;\n      high = Math.floor(val / 0x100000000);\n      low = val & 0xffffffff;\n      this.writeByte((high >> 24) & 0xff);\n      this.writeByte((high >> 16) & 0xff);\n      this.writeByte((high >> 8) & 0xff);\n      this.writeByte(high & 0xff);\n      this.writeByte((low >> 24) & 0xff);\n      this.writeByte((low >> 16) & 0xff);\n      this.writeByte((low >> 8) & 0xff);\n      return this.writeByte(low & 0xff);\n    };\n\n    Data.prototype.readInt = function() {\n      return this.readInt32();\n    };\n\n    Data.prototype.writeInt = function(val) {\n      return this.writeInt32(val);\n    };\n\n    Data.prototype.slice = function(start, end) {\n      return this.data.slice(start, end);\n    };\n\n    Data.prototype.read = function(bytes) {\n      var buf, i, j, ref;\n      buf = [];\n      for (i = j = 0, ref = bytes; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        buf.push(this.readByte());\n      }\n      return buf;\n    };\n\n    Data.prototype.write = function(bytes) {\n      var byte, j, len, results;\n      results = [];\n      for (j = 0, len = bytes.length; j < len; j++) {\n        byte = bytes[j];\n        results.push(this.writeByte(byte));\n      }\n      return results;\n    };\n\n    return Data;\n\n  })();\n\n  module.exports = Data;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/image/jpeg.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var JPEG, fs,\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  fs = require('fs');\n\n  JPEG = (function() {\n    var MARKERS;\n\n    MARKERS = [0xFFC0, 0xFFC1, 0xFFC2, 0xFFC3, 0xFFC5, 0xFFC6, 0xFFC7, 0xFFC8, 0xFFC9, 0xFFCA, 0xFFCB, 0xFFCC, 0xFFCD, 0xFFCE, 0xFFCF];\n\n    function JPEG(data, label) {\n      var channels, marker, pos;\n      this.data = data;\n      this.label = label;\n      if (this.data.readUInt16BE(0) !== 0xFFD8) {\n        throw \"SOI not found in JPEG\";\n      }\n      pos = 2;\n      while (pos < this.data.length) {\n        marker = this.data.readUInt16BE(pos);\n        pos += 2;\n        if (indexOf.call(MARKERS, marker) >= 0) {\n          break;\n        }\n        pos += this.data.readUInt16BE(pos);\n      }\n      if (indexOf.call(MARKERS, marker) < 0) {\n        throw \"Invalid JPEG.\";\n      }\n      pos += 2;\n      this.bits = this.data[pos++];\n      this.height = this.data.readUInt16BE(pos);\n      pos += 2;\n      this.width = this.data.readUInt16BE(pos);\n      pos += 2;\n      channels = this.data[pos++];\n      this.colorSpace = (function() {\n        switch (channels) {\n          case 1:\n            return 'DeviceGray';\n          case 3:\n            return 'DeviceRGB';\n          case 4:\n            return 'DeviceCMYK';\n        }\n      })();\n      this.obj = null;\n    }\n\n    JPEG.prototype.embed = function(document) {\n      if (this.obj) {\n        return;\n      }\n      this.obj = document.ref({\n        Type: 'XObject',\n        Subtype: 'Image',\n        BitsPerComponent: this.bits,\n        Width: this.width,\n        Height: this.height,\n        ColorSpace: this.colorSpace,\n        Filter: 'DCTDecode'\n      });\n      if (this.colorSpace === 'DeviceCMYK') {\n        this.obj.data['Decode'] = [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0];\n      }\n      this.obj.end(this.data);\n      return this.data = null;\n    };\n\n    return JPEG;\n\n  })();\n\n  module.exports = JPEG;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/image/png.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var PNG, PNGImage, zlib;\n\n  zlib = require('zlib');\n\n  PNG = require('png-js');\n\n  PNGImage = (function() {\n    function PNGImage(data, label) {\n      this.label = label;\n      this.image = new PNG(data);\n      this.width = this.image.width;\n      this.height = this.image.height;\n      this.imgData = this.image.imgData;\n      this.obj = null;\n    }\n\n    PNGImage.prototype.embed = function(document) {\n      var k, len1, mask, palette, params, rgb, val, x;\n      this.document = document;\n      if (this.obj) {\n        return;\n      }\n      this.obj = this.document.ref({\n        Type: 'XObject',\n        Subtype: 'Image',\n        BitsPerComponent: this.image.bits,\n        Width: this.width,\n        Height: this.height,\n        Filter: 'FlateDecode'\n      });\n      if (!this.image.hasAlphaChannel) {\n        params = this.document.ref({\n          Predictor: 15,\n          Colors: this.image.colors,\n          BitsPerComponent: this.image.bits,\n          Columns: this.width\n        });\n        this.obj.data['DecodeParms'] = params;\n        params.end();\n      }\n      if (this.image.palette.length === 0) {\n        this.obj.data['ColorSpace'] = this.image.colorSpace;\n      } else {\n        palette = this.document.ref();\n        palette.end(new Buffer(this.image.palette));\n        this.obj.data['ColorSpace'] = ['Indexed', 'DeviceRGB', (this.image.palette.length / 3) - 1, palette];\n      }\n      if (this.image.transparency.grayscale) {\n        val = this.image.transparency.greyscale;\n        return this.obj.data['Mask'] = [val, val];\n      } else if (this.image.transparency.rgb) {\n        rgb = this.image.transparency.rgb;\n        mask = [];\n        for (k = 0, len1 = rgb.length; k < len1; k++) {\n          x = rgb[k];\n          mask.push(x, x);\n        }\n        return this.obj.data['Mask'] = mask;\n      } else if (this.image.transparency.indexed) {\n        return this.loadIndexedAlphaChannel();\n      } else if (this.image.hasAlphaChannel) {\n        return this.splitAlphaChannel();\n      } else {\n        return this.finalize();\n      }\n    };\n\n    PNGImage.prototype.finalize = function() {\n      var sMask;\n      if (this.alphaChannel) {\n        sMask = this.document.ref({\n          Type: 'XObject',\n          Subtype: 'Image',\n          Height: this.height,\n          Width: this.width,\n          BitsPerComponent: 8,\n          Filter: 'FlateDecode',\n          ColorSpace: 'DeviceGray',\n          Decode: [0, 1]\n        });\n        sMask.end(this.alphaChannel);\n        this.obj.data['SMask'] = sMask;\n      }\n      this.obj.end(this.imgData);\n      this.image = null;\n      return this.imgData = null;\n    };\n\n    PNGImage.prototype.splitAlphaChannel = function() {\n      return this.image.decodePixels((function(_this) {\n        return function(pixels) {\n          var a, alphaChannel, colorByteSize, done, i, imgData, len, p, pixelCount;\n          colorByteSize = _this.image.colors * _this.image.bits / 8;\n          pixelCount = _this.width * _this.height;\n          imgData = new Buffer(pixelCount * colorByteSize);\n          alphaChannel = new Buffer(pixelCount);\n          i = p = a = 0;\n          len = pixels.length;\n          while (i < len) {\n            imgData[p++] = pixels[i++];\n            imgData[p++] = pixels[i++];\n            imgData[p++] = pixels[i++];\n            alphaChannel[a++] = pixels[i++];\n          }\n          done = 0;\n          zlib.deflate(imgData, function(err, imgData1) {\n            _this.imgData = imgData1;\n            if (err) {\n              throw err;\n            }\n            if (++done === 2) {\n              return _this.finalize();\n            }\n          });\n          return zlib.deflate(alphaChannel, function(err, alphaChannel1) {\n            _this.alphaChannel = alphaChannel1;\n            if (err) {\n              throw err;\n            }\n            if (++done === 2) {\n              return _this.finalize();\n            }\n          });\n        };\n      })(this));\n    };\n\n    PNGImage.prototype.loadIndexedAlphaChannel = function(fn) {\n      var transparency;\n      transparency = this.image.transparency.indexed;\n      return this.image.decodePixels((function(_this) {\n        return function(pixels) {\n          var alphaChannel, i, j, k, ref;\n          alphaChannel = new Buffer(_this.width * _this.height);\n          i = 0;\n          for (j = k = 0, ref = pixels.length; k < ref; j = k += 1) {\n            alphaChannel[i++] = transparency[pixels[j]];\n          }\n          return zlib.deflate(alphaChannel, function(err, alphaChannel1) {\n            _this.alphaChannel = alphaChannel1;\n            if (err) {\n              throw err;\n            }\n            return _this.finalize();\n          });\n        };\n      })(this));\n    };\n\n    return PNGImage;\n\n  })();\n\n  module.exports = PNGImage;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-pdfkit/node_modules/pdfkit/js/mixins/annotations.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  module.exports = {\n    annotate: function(x, y, w, h, options) {\n      var key, ref, val;\n      options.Type = 'Annot';\n      options.Rect = this._convertRect(x, y, w, h);\n      options.Border = [0, 0, 0];\n      if (options.Subtype !== 'Link') {\n        if (options.C == null) {\n          options.C = this._normalizeColor(options.color || [0, 0, 0]);\n        }\n      }\n      delete options.color;\n      if (typeof options.Dest === 'string') {\n        options.Dest = new String(options.Dest);\n      }\n      for (key in options) {\n        val = options[key];\n        options[key[0].toUpperCase() + key.slice(1)] = val;\n      }\n      ref = this.ref(options);\n      this.page.annotations.push(ref);\n      ref.end();\n      return this;\n    },\n    note: function(x, y, w, h, contents, options) {\n      if (options == null) {\n        options = {};\n      }\n      options.Subtype = 'Text';\n      options.Contents = new String(contents);\n      options.Name = 'Comment';\n      if (options.color == null) {\n        options.color = [243, 223, 92];\n      }\n      return this.annotate(x, y, w, h, options);\n    },\n    link: function(x, y, w, h, url, options) {\n      if (options == null) {\n        options = {};\n      }\n      options.Subtype = 'Link';\n      options.A = this.ref({\n        S: 'URI',\n        URI: new String(url)\n      });\n      options.A.end();\n      return this.annotate(x, y, w, h, options);\n    },\n    _markup: function(x, y, w, h, options) {\n      var ref1, x1, x2, y1, y2;\n      if (options == null) {\n        options = {};\n      }\n      ref1 = this._convertRect(x, y, w, h), x1 = ref1[0], y1 = ref1[1], x2 = ref1[2], y2 = ref1[3];\n      options.QuadPoints = [x1, y2, x2, y2, x1, y1, x2, y1];\n      options.Contents = new String;\n      return this.annotate(x, y, w, h, options);\n    },\n    highlight: function(x, y, w, h, options) {\n      if (options == null) {\n        options = {};\n      }\n      options.Subtype = 'Highlight';\n      if (options.color == null) {\n        options.color = [241, 238, 148];\n      }\n      return this._markup(x, y, w, h, options);\n    },\n    underline: function(x, y, w, h, options) {\n      if (options == null) {\n        options = {};\n      }\n      options.Subtype = 'Underline';\n      return this._markup(x, y, w, h, options);\n    },\n    strike: function(x, y, w, h, options) {\n      if (options == null) {\n        options = {};\n      }\n      options.Subtype = 'StrikeOut';\n      return this._markup(x, y, w, h, options);\n    },\n    lineAnnotation: function(x1, y1, x2, y2, options) {\n      if (options == null) {\n        options = {};\n      }\n      options.Subtype = 'Line';\n      options.Contents = new String;\n      options.L = [x1, this.page.height - y1, x2, this.page.height - y2];\n      return this.annotate(x1, y1, x2, y2, options);\n    },\n    rectAnnotation: function(x, y, w, h, options) {\n      if (options == null) {\n        options = {};\n      }\n      options.Subtype = 'Square';\n      options.Contents = new String;\n      return this.annotate(x, y, w, h, options);\n    },\n    ellipseAnnotation: function(x, y, w, h, options) {\n      if (options == null) {\n        options = {};\n      }\n      options.Subtype = 'Circle';\n      options.Contents = new String;\n      return this.annotate(x, y, w, h, options);\n    },\n    textAnnotation: function(x, y, w, h, text, options) {\n      if (options == null) {\n        options = {};\n      }\n      options.Subtype = 'FreeText';\n      options.Contents = new String(text);\n      options.DA = new String;\n      return this.annotate(x, y, w, h, options);\n    },\n    _convertRect: function(x1, y1, w, h) {\n      var m0, m1, m2, m3, m4, m5, ref1, x2, y2;\n      y2 = y1;\n      y1 += h;\n      x2 = x1 + w;\n      ref1 = this._ctm, m0 = ref1[0], m1 = ref1[1], m2 = ref1[2], m3 = ref1[3], m4 = ref1[4], m5 = ref1[5];\n      x1 = m0 * x1 + m2 * y1 + m4;\n      y1 = m1 * x1 + m3 * y1 + m5;\n      x2 = m0 * x2 + m2 * y2 + m4;\n      y2 = m1 * x2 + m3 * y2 + m5;\n      return [x1, y1, x2, y2];\n    }\n  };\n\n}).call(this);\n"}